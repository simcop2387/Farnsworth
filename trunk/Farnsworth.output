Conflicts:
----------
Conflict in state 42 between rule 105 and token '-' resolved as reduce.
Conflict in state 42 between rule 105 and token 'conforms' resolved as reduce.
Conflict in state 42 between rule 105 and token '*=' resolved as reduce.
Conflict in state 42 between rule 105 and token '<' resolved as reduce.
Conflict in state 42 between rule 105 and token '%' resolved as reduce.
Conflict in state 42 between rule 105 and token '==' resolved as reduce.
Conflict in state 42 between rule 105 and token '>=' resolved as reduce.
Conflict in state 42 between rule 105 and token ' ' resolved as reduce.
Conflict in state 42 between rule 105 and token '*' resolved as reduce.
Conflict in state 42 between rule 105 and token '**=' resolved as reduce.
Conflict in state 42 between rule 105 and token '||' resolved as reduce.
Conflict in state 42 between rule 105 and token '->' resolved as reduce.
Conflict in state 42 between rule 105 and token '-=' resolved as reduce.
Conflict in state 42 between rule 105 and token '/=' resolved as reduce.
Conflict in state 42 between rule 105 and token '<=' resolved as reduce.
Conflict in state 42 between rule 105 and token '%=' resolved as reduce.
Conflict in state 42 between rule 105 and token '>' resolved as reduce.
Conflict in state 42 between rule 105 and token '^=' resolved as reduce.
Conflict in state 42 between rule 105 and token '+' resolved as reduce.
Conflict in state 42 between rule 105 and token '**' resolved as shift.
Conflict in state 42 between rule 105 and token '^' resolved as shift.
Conflict in state 42 between rule 105 and token 'per' resolved as reduce.
Conflict in state 42 between rule 105 and token '!=' resolved as reduce.
Conflict in state 42 between rule 105 and token '?' resolved as reduce.
Conflict in state 42 between rule 105 and token '&&' resolved as reduce.
Conflict in state 42 between rule 105 and token '^^' resolved as reduce.
Conflict in state 42 between rule 105 and token '/' resolved as reduce.
Conflict in state 42 between rule 105 and token '+=' resolved as reduce.
Conflict in state 42 between rule 105 and token '=' resolved as reduce.
Conflict in state 42 between rule 105 and token '<=>' resolved as reduce.
Conflict in state 63 between rule 65 and token '-' resolved as reduce.
Conflict in state 123 between rule 66 and token '-' resolved as reduce.
Conflict in state 123 between rule 66 and token 'conforms' resolved as reduce.
Conflict in state 123 between rule 66 and token '*=' resolved as reduce.
Conflict in state 123 between rule 66 and token '<' resolved as reduce.
Conflict in state 123 between rule 66 and token '%' resolved as reduce.
Conflict in state 123 between rule 66 and token '==' resolved as reduce.
Conflict in state 123 between rule 66 and token '>=' resolved as reduce.
Conflict in state 123 between rule 66 and token ' ' resolved as reduce.
Conflict in state 123 between rule 66 and token '*' resolved as reduce.
Conflict in state 123 between rule 66 and token '**=' resolved as reduce.
Conflict in state 123 between rule 66 and token '||' resolved as reduce.
Conflict in state 123 between rule 66 and token '->' resolved as reduce.
Conflict in state 123 between rule 66 and token '-=' resolved as reduce.
Conflict in state 123 between rule 66 and token '/=' resolved as reduce.
Conflict in state 123 between rule 66 and token '<=' resolved as reduce.
Conflict in state 123 between rule 66 and token '%=' resolved as reduce.
Conflict in state 123 between rule 66 and token '>' resolved as reduce.
Conflict in state 123 between rule 66 and token '^=' resolved as reduce.
Conflict in state 123 between rule 66 and token '+' resolved as reduce.
Conflict in state 123 between rule 66 and token '**' resolved as shift.
Conflict in state 123 between rule 66 and token '^' resolved as shift.
Conflict in state 123 between rule 66 and token 'per' resolved as reduce.
Conflict in state 123 between rule 66 and token '!=' resolved as reduce.
Conflict in state 123 between rule 66 and token '?' resolved as reduce.
Conflict in state 123 between rule 66 and token '&&' resolved as reduce.
Conflict in state 123 between rule 66 and token '^^' resolved as reduce.
Conflict in state 123 between rule 66 and token '/' resolved as reduce.
Conflict in state 123 between rule 66 and token '+=' resolved as reduce.
Conflict in state 123 between rule 66 and token '=' resolved as reduce.
Conflict in state 123 between rule 66 and token '<=>' resolved as reduce.
Conflict in state 125 between rule 86 and token '-' resolved as reduce.
Conflict in state 125 between rule 86 and token 'conforms' resolved as reduce.
Conflict in state 125 between rule 86 and token '*=' resolved as reduce.
Conflict in state 125 between rule 86 and token '<' resolved as reduce.
Conflict in state 125 between rule 86 and token '%' resolved as shift.
Conflict in state 125 between rule 86 and token '==' resolved as reduce.
Conflict in state 125 between rule 86 and token '>=' resolved as reduce.
Conflict in state 125 between rule 86 and token ' ' resolved as shift.
Conflict in state 125 between rule 86 and token '*' resolved as shift.
Conflict in state 125 between rule 86 and token '**=' resolved as reduce.
Conflict in state 125 between rule 86 and token '||' resolved as reduce.
Conflict in state 125 between rule 86 and token '->' resolved as reduce.
Conflict in state 125 between rule 86 and token '-=' resolved as reduce.
Conflict in state 125 between rule 86 and token '/=' resolved as reduce.
Conflict in state 125 between rule 86 and token '<=' resolved as reduce.
Conflict in state 125 between rule 86 and token '%=' resolved as reduce.
Conflict in state 125 between rule 86 and token '>' resolved as reduce.
Conflict in state 125 between rule 86 and token '^=' resolved as reduce.
Conflict in state 125 between rule 86 and token '+' resolved as reduce.
Conflict in state 125 between rule 86 and token '**' resolved as shift.
Conflict in state 125 between rule 86 and token '^' resolved as shift.
Conflict in state 125 between rule 86 and token 'per' resolved as shift.
Conflict in state 125 between rule 86 and token '!=' resolved as reduce.
Conflict in state 125 between rule 86 and token '?' resolved as reduce.
Conflict in state 125 between rule 86 and token '&&' resolved as reduce.
Conflict in state 125 between rule 86 and token '^^' resolved as reduce.
Conflict in state 125 between rule 86 and token '/' resolved as shift.
Conflict in state 125 between rule 86 and token '+=' resolved as reduce.
Conflict in state 125 between rule 86 and token '=' resolved as reduce.
Conflict in state 125 between rule 86 and token '<=>' resolved as reduce.
Conflict in state 126 between rule 94 and token '-' resolved as shift.
Conflict in state 126 between rule 94 and token 'conforms' resolved as reduce.
Conflict in state 126 between rule 94 and token '*=' resolved as reduce.
Conflict in state 126 between rule 94 and token '<' resolved as shift.
Conflict in state 126 between rule 94 and token '%' resolved as shift.
Conflict in state 126 between rule 94 and token '==' resolved as shift.
Conflict in state 126 between rule 94 and token '>=' resolved as shift.
Conflict in state 126 between rule 94 and token ' ' resolved as shift.
Conflict in state 126 between rule 94 and token '*' resolved as shift.
Conflict in state 126 between rule 94 and token '**=' resolved as reduce.
Conflict in state 126 between rule 94 and token '||' resolved as reduce.
Conflict in state 126 between rule 94 and token '->' resolved as reduce.
Conflict in state 126 between rule 94 and token '-=' resolved as reduce.
Conflict in state 126 between rule 94 and token '/=' resolved as reduce.
Conflict in state 126 between rule 94 and token '<=' resolved as shift.
Conflict in state 126 between rule 94 and token '%=' resolved as reduce.
Conflict in state 126 between rule 94 and token '>' resolved as shift.
Conflict in state 126 between rule 94 and token '^=' resolved as reduce.
Conflict in state 126 between rule 94 and token '+' resolved as shift.
Conflict in state 126 between rule 94 and token '**' resolved as shift.
Conflict in state 126 between rule 94 and token '^' resolved as shift.
Conflict in state 126 between rule 94 and token 'per' resolved as shift.
Conflict in state 126 between rule 94 and token '!=' resolved as shift.
Conflict in state 126 between rule 94 and token '?' resolved as reduce.
Conflict in state 126 between rule 94 and token '&&' resolved as reduce.
Conflict in state 126 between rule 94 and token '^^' resolved as reduce.
Conflict in state 126 between rule 94 and token '/' resolved as shift.
Conflict in state 126 between rule 94 and token '+=' resolved as reduce.
Conflict in state 126 between rule 94 and token '=' resolved as reduce.
Conflict in state 126 between rule 94 and token '<=>' resolved as shift.
Conflict in state 127 between rule 72 and token '-' resolved as shift.
Conflict in state 127 between rule 72 and token 'conforms' resolved as reduce.
Conflict in state 127 between rule 72 and token '*=' resolved as reduce.
Conflict in state 127 between rule 72 and token '<' resolved as error.
Conflict in state 127 between rule 72 and token '%' resolved as shift.
Conflict in state 127 between rule 72 and token '==' resolved as error.
Conflict in state 127 between rule 72 and token '>=' resolved as error.
Conflict in state 127 between rule 72 and token ' ' resolved as shift.
Conflict in state 127 between rule 72 and token '*' resolved as shift.
Conflict in state 127 between rule 72 and token '**=' resolved as reduce.
Conflict in state 127 between rule 72 and token '||' resolved as reduce.
Conflict in state 127 between rule 72 and token '->' resolved as reduce.
Conflict in state 127 between rule 72 and token '-=' resolved as reduce.
Conflict in state 127 between rule 72 and token '/=' resolved as reduce.
Conflict in state 127 between rule 72 and token '<=' resolved as error.
Conflict in state 127 between rule 72 and token '%=' resolved as reduce.
Conflict in state 127 between rule 72 and token '>' resolved as error.
Conflict in state 127 between rule 72 and token '^=' resolved as reduce.
Conflict in state 127 between rule 72 and token '+' resolved as shift.
Conflict in state 127 between rule 72 and token '**' resolved as shift.
Conflict in state 127 between rule 72 and token '^' resolved as shift.
Conflict in state 127 between rule 72 and token 'per' resolved as shift.
Conflict in state 127 between rule 72 and token '!=' resolved as error.
Conflict in state 127 between rule 72 and token '?' resolved as reduce.
Conflict in state 127 between rule 72 and token '&&' resolved as reduce.
Conflict in state 127 between rule 72 and token '^^' resolved as reduce.
Conflict in state 127 between rule 72 and token '/' resolved as shift.
Conflict in state 127 between rule 72 and token '+=' resolved as reduce.
Conflict in state 127 between rule 72 and token '=' resolved as reduce.
Conflict in state 127 between rule 72 and token '<=>' resolved as error.
Conflict in state 128 between rule 56 and token '-' resolved as shift.
Conflict in state 128 between rule 56 and token 'conforms' resolved as shift.
Conflict in state 128 between rule 56 and token '*=' resolved as shift.
Conflict in state 128 between rule 56 and token '<' resolved as shift.
Conflict in state 128 between rule 56 and token '%' resolved as shift.
Conflict in state 128 between rule 56 and token '==' resolved as shift.
Conflict in state 128 between rule 56 and token '>=' resolved as shift.
Conflict in state 128 between rule 56 and token ' ' resolved as shift.
Conflict in state 128 between rule 56 and token '*' resolved as shift.
Conflict in state 128 between rule 56 and token '**=' resolved as shift.
Conflict in state 128 between rule 56 and token '||' resolved as shift.
Conflict in state 128 between rule 56 and token '->' resolved as shift.
Conflict in state 128 between rule 56 and token '-=' resolved as shift.
Conflict in state 128 between rule 56 and token '/=' resolved as shift.
Conflict in state 128 between rule 56 and token '<=' resolved as shift.
Conflict in state 128 between rule 56 and token '%=' resolved as shift.
Conflict in state 128 between rule 56 and token '>' resolved as shift.
Conflict in state 128 between rule 56 and token '^=' resolved as shift.
Conflict in state 128 between rule 56 and token '+' resolved as shift.
Conflict in state 128 between rule 56 and token '**' resolved as shift.
Conflict in state 128 between rule 56 and token '^' resolved as shift.
Conflict in state 128 between rule 56 and token 'per' resolved as shift.
Conflict in state 128 between rule 56 and token '!=' resolved as shift.
Conflict in state 128 between rule 56 and token '?' resolved as shift.
Conflict in state 128 between rule 56 and token '&&' resolved as shift.
Conflict in state 128 between rule 56 and token '^^' resolved as shift.
Conflict in state 128 between rule 56 and token '/' resolved as shift.
Conflict in state 128 between rule 56 and token '+=' resolved as shift.
Conflict in state 128 between rule 56 and token '=' resolved as shift.
Conflict in state 128 between rule 56 and token '<=>' resolved as shift.
Conflict in state 129 between rule 89 and token '-' resolved as reduce.
Conflict in state 129 between rule 89 and token 'conforms' resolved as reduce.
Conflict in state 129 between rule 89 and token '*=' resolved as reduce.
Conflict in state 129 between rule 89 and token '<' resolved as reduce.
Conflict in state 129 between rule 89 and token '%' resolved as reduce.
Conflict in state 129 between rule 89 and token '==' resolved as reduce.
Conflict in state 129 between rule 89 and token '>=' resolved as reduce.
Conflict in state 129 between rule 89 and token ' ' resolved as reduce.
Conflict in state 129 between rule 89 and token '*' resolved as reduce.
Conflict in state 129 between rule 89 and token '**=' resolved as reduce.
Conflict in state 129 between rule 89 and token '||' resolved as reduce.
Conflict in state 129 between rule 89 and token '->' resolved as reduce.
Conflict in state 129 between rule 89 and token '-=' resolved as reduce.
Conflict in state 129 between rule 89 and token '/=' resolved as reduce.
Conflict in state 129 between rule 89 and token '<=' resolved as reduce.
Conflict in state 129 between rule 89 and token '%=' resolved as reduce.
Conflict in state 129 between rule 89 and token '>' resolved as reduce.
Conflict in state 129 between rule 89 and token '^=' resolved as reduce.
Conflict in state 129 between rule 89 and token '+' resolved as reduce.
Conflict in state 129 between rule 89 and token '**' resolved as shift.
Conflict in state 129 between rule 89 and token '^' resolved as shift.
Conflict in state 129 between rule 89 and token 'per' resolved as reduce.
Conflict in state 129 between rule 89 and token '!=' resolved as reduce.
Conflict in state 129 between rule 89 and token '?' resolved as reduce.
Conflict in state 129 between rule 89 and token '&&' resolved as reduce.
Conflict in state 129 between rule 89 and token '^^' resolved as reduce.
Conflict in state 129 between rule 89 and token '/' resolved as reduce.
Conflict in state 129 between rule 89 and token '+=' resolved as reduce.
Conflict in state 129 between rule 89 and token '=' resolved as reduce.
Conflict in state 129 between rule 89 and token '<=>' resolved as reduce.
Conflict in state 130 between rule 76 and token '-' resolved as shift.
Conflict in state 130 between rule 76 and token 'conforms' resolved as reduce.
Conflict in state 130 between rule 76 and token '*=' resolved as reduce.
Conflict in state 130 between rule 76 and token '<' resolved as error.
Conflict in state 130 between rule 76 and token '%' resolved as shift.
Conflict in state 130 between rule 76 and token '==' resolved as error.
Conflict in state 130 between rule 76 and token '>=' resolved as error.
Conflict in state 130 between rule 76 and token ' ' resolved as shift.
Conflict in state 130 between rule 76 and token '*' resolved as shift.
Conflict in state 130 between rule 76 and token '**=' resolved as reduce.
Conflict in state 130 between rule 76 and token '||' resolved as reduce.
Conflict in state 130 between rule 76 and token '->' resolved as reduce.
Conflict in state 130 between rule 76 and token '-=' resolved as reduce.
Conflict in state 130 between rule 76 and token '/=' resolved as reduce.
Conflict in state 130 between rule 76 and token '<=' resolved as error.
Conflict in state 130 between rule 76 and token '%=' resolved as reduce.
Conflict in state 130 between rule 76 and token '>' resolved as error.
Conflict in state 130 between rule 76 and token '^=' resolved as reduce.
Conflict in state 130 between rule 76 and token '+' resolved as shift.
Conflict in state 130 between rule 76 and token '**' resolved as shift.
Conflict in state 130 between rule 76 and token '^' resolved as shift.
Conflict in state 130 between rule 76 and token 'per' resolved as shift.
Conflict in state 130 between rule 76 and token '!=' resolved as error.
Conflict in state 130 between rule 76 and token '?' resolved as reduce.
Conflict in state 130 between rule 76 and token '&&' resolved as reduce.
Conflict in state 130 between rule 76 and token '^^' resolved as reduce.
Conflict in state 130 between rule 76 and token '/' resolved as shift.
Conflict in state 130 between rule 76 and token '+=' resolved as reduce.
Conflict in state 130 between rule 76 and token '=' resolved as reduce.
Conflict in state 130 between rule 76 and token '<=>' resolved as error.
Conflict in state 131 between rule 75 and token '-' resolved as shift.
Conflict in state 131 between rule 75 and token 'conforms' resolved as reduce.
Conflict in state 131 between rule 75 and token '*=' resolved as reduce.
Conflict in state 131 between rule 75 and token '<' resolved as error.
Conflict in state 131 between rule 75 and token '%' resolved as shift.
Conflict in state 131 between rule 75 and token '==' resolved as error.
Conflict in state 131 between rule 75 and token '>=' resolved as error.
Conflict in state 131 between rule 75 and token ' ' resolved as shift.
Conflict in state 131 between rule 75 and token '*' resolved as shift.
Conflict in state 131 between rule 75 and token '**=' resolved as reduce.
Conflict in state 131 between rule 75 and token '||' resolved as reduce.
Conflict in state 131 between rule 75 and token '->' resolved as reduce.
Conflict in state 131 between rule 75 and token '-=' resolved as reduce.
Conflict in state 131 between rule 75 and token '/=' resolved as reduce.
Conflict in state 131 between rule 75 and token '<=' resolved as error.
Conflict in state 131 between rule 75 and token '%=' resolved as reduce.
Conflict in state 131 between rule 75 and token '>' resolved as error.
Conflict in state 131 between rule 75 and token '^=' resolved as reduce.
Conflict in state 131 between rule 75 and token '+' resolved as shift.
Conflict in state 131 between rule 75 and token '**' resolved as shift.
Conflict in state 131 between rule 75 and token '^' resolved as shift.
Conflict in state 131 between rule 75 and token 'per' resolved as shift.
Conflict in state 131 between rule 75 and token '!=' resolved as error.
Conflict in state 131 between rule 75 and token '?' resolved as reduce.
Conflict in state 131 between rule 75 and token '&&' resolved as reduce.
Conflict in state 131 between rule 75 and token '^^' resolved as reduce.
Conflict in state 131 between rule 75 and token '/' resolved as shift.
Conflict in state 131 between rule 75 and token '+=' resolved as reduce.
Conflict in state 131 between rule 75 and token '=' resolved as reduce.
Conflict in state 131 between rule 75 and token '<=>' resolved as error.
Conflict in state 132 between rule 67 and token '-' resolved as reduce.
Conflict in state 132 between rule 67 and token 'conforms' resolved as reduce.
Conflict in state 132 between rule 67 and token '*=' resolved as reduce.
Conflict in state 132 between rule 67 and token '<' resolved as reduce.
Conflict in state 132 between rule 67 and token '%' resolved as reduce.
Conflict in state 132 between rule 67 and token '==' resolved as reduce.
Conflict in state 132 between rule 67 and token '>=' resolved as reduce.
Conflict in state 132 between rule 67 and token ' ' resolved as reduce.
Conflict in state 132 between rule 67 and token '*' resolved as reduce.
Conflict in state 132 between rule 67 and token '**=' resolved as reduce.
Conflict in state 132 between rule 67 and token '||' resolved as reduce.
Conflict in state 132 between rule 67 and token '->' resolved as reduce.
Conflict in state 132 between rule 67 and token '-=' resolved as reduce.
Conflict in state 132 between rule 67 and token '/=' resolved as reduce.
Conflict in state 132 between rule 67 and token '<=' resolved as reduce.
Conflict in state 132 between rule 67 and token '%=' resolved as reduce.
Conflict in state 132 between rule 67 and token '>' resolved as reduce.
Conflict in state 132 between rule 67 and token '^=' resolved as reduce.
Conflict in state 132 between rule 67 and token '+' resolved as reduce.
Conflict in state 132 between rule 67 and token '**' resolved as shift.
Conflict in state 132 between rule 67 and token '^' resolved as shift.
Conflict in state 132 between rule 67 and token 'per' resolved as reduce.
Conflict in state 132 between rule 67 and token '!=' resolved as reduce.
Conflict in state 132 between rule 67 and token '?' resolved as reduce.
Conflict in state 132 between rule 67 and token '&&' resolved as reduce.
Conflict in state 132 between rule 67 and token '^^' resolved as reduce.
Conflict in state 132 between rule 67 and token '/' resolved as reduce.
Conflict in state 132 between rule 67 and token '+=' resolved as reduce.
Conflict in state 132 between rule 67 and token '=' resolved as reduce.
Conflict in state 132 between rule 67 and token '<=>' resolved as reduce.
Conflict in state 133 between rule 64 and token '-' resolved as reduce.
Conflict in state 133 between rule 64 and token 'conforms' resolved as reduce.
Conflict in state 133 between rule 64 and token '*=' resolved as reduce.
Conflict in state 133 between rule 64 and token '<' resolved as reduce.
Conflict in state 133 between rule 64 and token '%' resolved as reduce.
Conflict in state 133 between rule 64 and token '==' resolved as reduce.
Conflict in state 133 between rule 64 and token '>=' resolved as reduce.
Conflict in state 133 between rule 64 and token ' ' resolved as reduce.
Conflict in state 133 between rule 64 and token '*' resolved as reduce.
Conflict in state 133 between rule 64 and token '**=' resolved as reduce.
Conflict in state 133 between rule 64 and token '||' resolved as reduce.
Conflict in state 133 between rule 64 and token '->' resolved as reduce.
Conflict in state 133 between rule 64 and token '-=' resolved as reduce.
Conflict in state 133 between rule 64 and token '/=' resolved as reduce.
Conflict in state 133 between rule 64 and token '<=' resolved as reduce.
Conflict in state 133 between rule 64 and token '%=' resolved as reduce.
Conflict in state 133 between rule 64 and token '>' resolved as reduce.
Conflict in state 133 between rule 64 and token '^=' resolved as reduce.
Conflict in state 133 between rule 64 and token '+' resolved as reduce.
Conflict in state 133 between rule 64 and token '**' resolved as shift.
Conflict in state 133 between rule 64 and token '^' resolved as shift.
Conflict in state 133 between rule 64 and token 'per' resolved as reduce.
Conflict in state 133 between rule 64 and token '!=' resolved as reduce.
Conflict in state 133 between rule 64 and token '?' resolved as reduce.
Conflict in state 133 between rule 64 and token '&&' resolved as reduce.
Conflict in state 133 between rule 64 and token '^^' resolved as reduce.
Conflict in state 133 between rule 64 and token '/' resolved as reduce.
Conflict in state 133 between rule 64 and token '+=' resolved as reduce.
Conflict in state 133 between rule 64 and token '=' resolved as reduce.
Conflict in state 133 between rule 64 and token '<=>' resolved as reduce.
Conflict in state 134 between rule 58 and token '-' resolved as shift.
Conflict in state 134 between rule 58 and token 'conforms' resolved as shift.
Conflict in state 134 between rule 58 and token '*=' resolved as shift.
Conflict in state 134 between rule 58 and token '<' resolved as shift.
Conflict in state 134 between rule 58 and token '%' resolved as shift.
Conflict in state 134 between rule 58 and token '==' resolved as shift.
Conflict in state 134 between rule 58 and token '>=' resolved as shift.
Conflict in state 134 between rule 58 and token ' ' resolved as shift.
Conflict in state 134 between rule 58 and token '*' resolved as shift.
Conflict in state 134 between rule 58 and token '**=' resolved as shift.
Conflict in state 134 between rule 58 and token '||' resolved as shift.
Conflict in state 134 between rule 58 and token '->' resolved as shift.
Conflict in state 134 between rule 58 and token '-=' resolved as shift.
Conflict in state 134 between rule 58 and token '/=' resolved as shift.
Conflict in state 134 between rule 58 and token '<=' resolved as shift.
Conflict in state 134 between rule 58 and token '%=' resolved as shift.
Conflict in state 134 between rule 58 and token '>' resolved as shift.
Conflict in state 134 between rule 58 and token '^=' resolved as shift.
Conflict in state 134 between rule 58 and token '+' resolved as shift.
Conflict in state 134 between rule 58 and token '**' resolved as shift.
Conflict in state 134 between rule 58 and token '^' resolved as shift.
Conflict in state 134 between rule 58 and token 'per' resolved as shift.
Conflict in state 134 between rule 58 and token '!=' resolved as shift.
Conflict in state 134 between rule 58 and token '?' resolved as shift.
Conflict in state 134 between rule 58 and token '&&' resolved as shift.
Conflict in state 134 between rule 58 and token '^^' resolved as shift.
Conflict in state 134 between rule 58 and token '/' resolved as shift.
Conflict in state 134 between rule 58 and token '+=' resolved as shift.
Conflict in state 134 between rule 58 and token '=' resolved as shift.
Conflict in state 134 between rule 58 and token '<=>' resolved as shift.
Conflict in state 136 between rule 69 and token '-' resolved as shift.
Conflict in state 136 between rule 69 and token 'conforms' resolved as shift.
Conflict in state 136 between rule 69 and token '*=' resolved as reduce.
Conflict in state 136 between rule 69 and token '<' resolved as shift.
Conflict in state 136 between rule 69 and token '%' resolved as shift.
Conflict in state 136 between rule 69 and token '==' resolved as shift.
Conflict in state 136 between rule 69 and token '>=' resolved as shift.
Conflict in state 136 between rule 69 and token ' ' resolved as shift.
Conflict in state 136 between rule 69 and token '*' resolved as shift.
Conflict in state 136 between rule 69 and token '**=' resolved as reduce.
Conflict in state 136 between rule 69 and token '||' resolved as reduce.
Conflict in state 136 between rule 69 and token '->' resolved as reduce.
Conflict in state 136 between rule 69 and token '-=' resolved as reduce.
Conflict in state 136 between rule 69 and token '/=' resolved as reduce.
Conflict in state 136 between rule 69 and token '<=' resolved as shift.
Conflict in state 136 between rule 69 and token '%=' resolved as reduce.
Conflict in state 136 between rule 69 and token '>' resolved as shift.
Conflict in state 136 between rule 69 and token '^=' resolved as reduce.
Conflict in state 136 between rule 69 and token '+' resolved as shift.
Conflict in state 136 between rule 69 and token '**' resolved as shift.
Conflict in state 136 between rule 69 and token '^' resolved as shift.
Conflict in state 136 between rule 69 and token 'per' resolved as shift.
Conflict in state 136 between rule 69 and token '!=' resolved as shift.
Conflict in state 136 between rule 69 and token '?' resolved as reduce.
Conflict in state 136 between rule 69 and token '&&' resolved as reduce.
Conflict in state 136 between rule 69 and token '^^' resolved as reduce.
Conflict in state 136 between rule 69 and token '/' resolved as shift.
Conflict in state 136 between rule 69 and token '+=' resolved as reduce.
Conflict in state 136 between rule 69 and token '=' resolved as reduce.
Conflict in state 136 between rule 69 and token '<=>' resolved as shift.
Conflict in state 137 between rule 102 and token '-' resolved as shift.
Conflict in state 137 between rule 102 and token 'conforms' resolved as shift.
Conflict in state 137 between rule 102 and token '*=' resolved as reduce.
Conflict in state 137 between rule 102 and token '<' resolved as shift.
Conflict in state 137 between rule 102 and token '%' resolved as shift.
Conflict in state 137 between rule 102 and token '==' resolved as shift.
Conflict in state 137 between rule 102 and token '>=' resolved as shift.
Conflict in state 137 between rule 102 and token ' ' resolved as shift.
Conflict in state 137 between rule 102 and token '*' resolved as shift.
Conflict in state 137 between rule 102 and token '**=' resolved as reduce.
Conflict in state 137 between rule 102 and token '||' resolved as shift.
Conflict in state 137 between rule 102 and token '->' resolved as reduce.
Conflict in state 137 between rule 102 and token '-=' resolved as reduce.
Conflict in state 137 between rule 102 and token '/=' resolved as reduce.
Conflict in state 137 between rule 102 and token '<=' resolved as shift.
Conflict in state 137 between rule 102 and token '%=' resolved as reduce.
Conflict in state 137 between rule 102 and token '>' resolved as shift.
Conflict in state 137 between rule 102 and token '^=' resolved as reduce.
Conflict in state 137 between rule 102 and token '+' resolved as shift.
Conflict in state 137 between rule 102 and token '**' resolved as shift.
Conflict in state 137 between rule 102 and token '^' resolved as shift.
Conflict in state 137 between rule 102 and token 'per' resolved as shift.
Conflict in state 137 between rule 102 and token '!=' resolved as shift.
Conflict in state 137 between rule 102 and token '?' resolved as shift.
Conflict in state 137 between rule 102 and token '&&' resolved as shift.
Conflict in state 137 between rule 102 and token '^^' resolved as shift.
Conflict in state 137 between rule 102 and token '/' resolved as shift.
Conflict in state 137 between rule 102 and token '+=' resolved as reduce.
Conflict in state 137 between rule 102 and token '=' resolved as reduce.
Conflict in state 137 between rule 102 and token '<=>' resolved as shift.
Conflict in state 138 between rule 54 and token '-' resolved as shift.
Conflict in state 138 between rule 54 and token 'conforms' resolved as shift.
Conflict in state 138 between rule 54 and token '*=' resolved as shift.
Conflict in state 138 between rule 54 and token '<' resolved as shift.
Conflict in state 138 between rule 54 and token '%' resolved as shift.
Conflict in state 138 between rule 54 and token '==' resolved as shift.
Conflict in state 138 between rule 54 and token '>=' resolved as shift.
Conflict in state 138 between rule 54 and token ' ' resolved as shift.
Conflict in state 138 between rule 54 and token '*' resolved as shift.
Conflict in state 138 between rule 54 and token '**=' resolved as shift.
Conflict in state 138 between rule 54 and token '||' resolved as shift.
Conflict in state 138 between rule 54 and token '->' resolved as shift.
Conflict in state 138 between rule 54 and token '-=' resolved as shift.
Conflict in state 138 between rule 54 and token '/=' resolved as shift.
Conflict in state 138 between rule 54 and token '<=' resolved as shift.
Conflict in state 138 between rule 54 and token '%=' resolved as shift.
Conflict in state 138 between rule 54 and token '>' resolved as shift.
Conflict in state 138 between rule 54 and token '^=' resolved as shift.
Conflict in state 138 between rule 54 and token '+' resolved as shift.
Conflict in state 138 between rule 54 and token '**' resolved as shift.
Conflict in state 138 between rule 54 and token '^' resolved as shift.
Conflict in state 138 between rule 54 and token 'per' resolved as shift.
Conflict in state 138 between rule 54 and token '!=' resolved as shift.
Conflict in state 138 between rule 54 and token '?' resolved as shift.
Conflict in state 138 between rule 54 and token '&&' resolved as shift.
Conflict in state 138 between rule 54 and token '^^' resolved as shift.
Conflict in state 138 between rule 54 and token '/' resolved as shift.
Conflict in state 138 between rule 54 and token '+=' resolved as shift.
Conflict in state 138 between rule 54 and token '=' resolved as shift.
Conflict in state 138 between rule 54 and token '<=>' resolved as shift.
Conflict in state 139 between rule 55 and token '-' resolved as shift.
Conflict in state 139 between rule 55 and token 'conforms' resolved as shift.
Conflict in state 139 between rule 55 and token '*=' resolved as shift.
Conflict in state 139 between rule 55 and token '<' resolved as shift.
Conflict in state 139 between rule 55 and token '%' resolved as shift.
Conflict in state 139 between rule 55 and token '==' resolved as shift.
Conflict in state 139 between rule 55 and token '>=' resolved as shift.
Conflict in state 139 between rule 55 and token ' ' resolved as shift.
Conflict in state 139 between rule 55 and token '*' resolved as shift.
Conflict in state 139 between rule 55 and token '**=' resolved as shift.
Conflict in state 139 between rule 55 and token '||' resolved as shift.
Conflict in state 139 between rule 55 and token '->' resolved as shift.
Conflict in state 139 between rule 55 and token '-=' resolved as shift.
Conflict in state 139 between rule 55 and token '/=' resolved as shift.
Conflict in state 139 between rule 55 and token '<=' resolved as shift.
Conflict in state 139 between rule 55 and token '%=' resolved as shift.
Conflict in state 139 between rule 55 and token '>' resolved as shift.
Conflict in state 139 between rule 55 and token '^=' resolved as shift.
Conflict in state 139 between rule 55 and token '+' resolved as shift.
Conflict in state 139 between rule 55 and token '**' resolved as shift.
Conflict in state 139 between rule 55 and token '^' resolved as shift.
Conflict in state 139 between rule 55 and token 'per' resolved as shift.
Conflict in state 139 between rule 55 and token '!=' resolved as shift.
Conflict in state 139 between rule 55 and token '?' resolved as shift.
Conflict in state 139 between rule 55 and token '&&' resolved as shift.
Conflict in state 139 between rule 55 and token '^^' resolved as shift.
Conflict in state 139 between rule 55 and token '/' resolved as shift.
Conflict in state 139 between rule 55 and token '+=' resolved as shift.
Conflict in state 139 between rule 55 and token '=' resolved as shift.
Conflict in state 139 between rule 55 and token '<=>' resolved as shift.
Conflict in state 140 between rule 74 and token '-' resolved as shift.
Conflict in state 140 between rule 74 and token 'conforms' resolved as reduce.
Conflict in state 140 between rule 74 and token '*=' resolved as reduce.
Conflict in state 140 between rule 74 and token '<' resolved as error.
Conflict in state 140 between rule 74 and token '%' resolved as shift.
Conflict in state 140 between rule 74 and token '==' resolved as error.
Conflict in state 140 between rule 74 and token '>=' resolved as error.
Conflict in state 140 between rule 74 and token ' ' resolved as shift.
Conflict in state 140 between rule 74 and token '*' resolved as shift.
Conflict in state 140 between rule 74 and token '**=' resolved as reduce.
Conflict in state 140 between rule 74 and token '||' resolved as reduce.
Conflict in state 140 between rule 74 and token '->' resolved as reduce.
Conflict in state 140 between rule 74 and token '-=' resolved as reduce.
Conflict in state 140 between rule 74 and token '/=' resolved as reduce.
Conflict in state 140 between rule 74 and token '<=' resolved as error.
Conflict in state 140 between rule 74 and token '%=' resolved as reduce.
Conflict in state 140 between rule 74 and token '>' resolved as error.
Conflict in state 140 between rule 74 and token '^=' resolved as reduce.
Conflict in state 140 between rule 74 and token '+' resolved as shift.
Conflict in state 140 between rule 74 and token '**' resolved as shift.
Conflict in state 140 between rule 74 and token '^' resolved as shift.
Conflict in state 140 between rule 74 and token 'per' resolved as shift.
Conflict in state 140 between rule 74 and token '!=' resolved as error.
Conflict in state 140 between rule 74 and token '?' resolved as reduce.
Conflict in state 140 between rule 74 and token '&&' resolved as reduce.
Conflict in state 140 between rule 74 and token '^^' resolved as reduce.
Conflict in state 140 between rule 74 and token '/' resolved as shift.
Conflict in state 140 between rule 74 and token '+=' resolved as reduce.
Conflict in state 140 between rule 74 and token '=' resolved as reduce.
Conflict in state 140 between rule 74 and token '<=>' resolved as error.
Conflict in state 141 between rule 73 and token '-' resolved as shift.
Conflict in state 141 between rule 73 and token 'conforms' resolved as reduce.
Conflict in state 141 between rule 73 and token '*=' resolved as reduce.
Conflict in state 141 between rule 73 and token '<' resolved as error.
Conflict in state 141 between rule 73 and token '%' resolved as shift.
Conflict in state 141 between rule 73 and token '==' resolved as error.
Conflict in state 141 between rule 73 and token '>=' resolved as error.
Conflict in state 141 between rule 73 and token ' ' resolved as shift.
Conflict in state 141 between rule 73 and token '*' resolved as shift.
Conflict in state 141 between rule 73 and token '**=' resolved as reduce.
Conflict in state 141 between rule 73 and token '||' resolved as reduce.
Conflict in state 141 between rule 73 and token '->' resolved as reduce.
Conflict in state 141 between rule 73 and token '-=' resolved as reduce.
Conflict in state 141 between rule 73 and token '/=' resolved as reduce.
Conflict in state 141 between rule 73 and token '<=' resolved as error.
Conflict in state 141 between rule 73 and token '%=' resolved as reduce.
Conflict in state 141 between rule 73 and token '>' resolved as error.
Conflict in state 141 between rule 73 and token '^=' resolved as reduce.
Conflict in state 141 between rule 73 and token '+' resolved as shift.
Conflict in state 141 between rule 73 and token '**' resolved as shift.
Conflict in state 141 between rule 73 and token '^' resolved as shift.
Conflict in state 141 between rule 73 and token 'per' resolved as shift.
Conflict in state 141 between rule 73 and token '!=' resolved as error.
Conflict in state 141 between rule 73 and token '?' resolved as reduce.
Conflict in state 141 between rule 73 and token '&&' resolved as reduce.
Conflict in state 141 between rule 73 and token '^^' resolved as reduce.
Conflict in state 141 between rule 73 and token '/' resolved as shift.
Conflict in state 141 between rule 73 and token '+=' resolved as reduce.
Conflict in state 141 between rule 73 and token '=' resolved as reduce.
Conflict in state 141 between rule 73 and token '<=>' resolved as error.
Conflict in state 142 between rule 57 and token '-' resolved as shift.
Conflict in state 142 between rule 57 and token 'conforms' resolved as shift.
Conflict in state 142 between rule 57 and token '*=' resolved as shift.
Conflict in state 142 between rule 57 and token '<' resolved as shift.
Conflict in state 142 between rule 57 and token '%' resolved as shift.
Conflict in state 142 between rule 57 and token '==' resolved as shift.
Conflict in state 142 between rule 57 and token '>=' resolved as shift.
Conflict in state 142 between rule 57 and token ' ' resolved as shift.
Conflict in state 142 between rule 57 and token '*' resolved as shift.
Conflict in state 142 between rule 57 and token '**=' resolved as shift.
Conflict in state 142 between rule 57 and token '||' resolved as shift.
Conflict in state 142 between rule 57 and token '->' resolved as shift.
Conflict in state 142 between rule 57 and token '-=' resolved as shift.
Conflict in state 142 between rule 57 and token '/=' resolved as shift.
Conflict in state 142 between rule 57 and token '<=' resolved as shift.
Conflict in state 142 between rule 57 and token '%=' resolved as shift.
Conflict in state 142 between rule 57 and token '>' resolved as shift.
Conflict in state 142 between rule 57 and token '^=' resolved as shift.
Conflict in state 142 between rule 57 and token '+' resolved as shift.
Conflict in state 142 between rule 57 and token '**' resolved as shift.
Conflict in state 142 between rule 57 and token '^' resolved as shift.
Conflict in state 142 between rule 57 and token 'per' resolved as shift.
Conflict in state 142 between rule 57 and token '!=' resolved as shift.
Conflict in state 142 between rule 57 and token '?' resolved as shift.
Conflict in state 142 between rule 57 and token '&&' resolved as shift.
Conflict in state 142 between rule 57 and token '^^' resolved as shift.
Conflict in state 142 between rule 57 and token '/' resolved as shift.
Conflict in state 142 between rule 57 and token '+=' resolved as shift.
Conflict in state 142 between rule 57 and token '=' resolved as shift.
Conflict in state 142 between rule 57 and token '<=>' resolved as shift.
Conflict in state 143 between rule 59 and token '-' resolved as shift.
Conflict in state 143 between rule 59 and token 'conforms' resolved as shift.
Conflict in state 143 between rule 59 and token '*=' resolved as shift.
Conflict in state 143 between rule 59 and token '<' resolved as shift.
Conflict in state 143 between rule 59 and token '%' resolved as shift.
Conflict in state 143 between rule 59 and token '==' resolved as shift.
Conflict in state 143 between rule 59 and token '>=' resolved as shift.
Conflict in state 143 between rule 59 and token ' ' resolved as shift.
Conflict in state 143 between rule 59 and token '*' resolved as shift.
Conflict in state 143 between rule 59 and token '**=' resolved as shift.
Conflict in state 143 between rule 59 and token '||' resolved as shift.
Conflict in state 143 between rule 59 and token '->' resolved as shift.
Conflict in state 143 between rule 59 and token '-=' resolved as shift.
Conflict in state 143 between rule 59 and token '/=' resolved as shift.
Conflict in state 143 between rule 59 and token '<=' resolved as shift.
Conflict in state 143 between rule 59 and token '%=' resolved as shift.
Conflict in state 143 between rule 59 and token '>' resolved as shift.
Conflict in state 143 between rule 59 and token '^=' resolved as shift.
Conflict in state 143 between rule 59 and token '+' resolved as shift.
Conflict in state 143 between rule 59 and token '**' resolved as shift.
Conflict in state 143 between rule 59 and token '^' resolved as shift.
Conflict in state 143 between rule 59 and token 'per' resolved as shift.
Conflict in state 143 between rule 59 and token '!=' resolved as shift.
Conflict in state 143 between rule 59 and token '?' resolved as shift.
Conflict in state 143 between rule 59 and token '&&' resolved as shift.
Conflict in state 143 between rule 59 and token '^^' resolved as shift.
Conflict in state 143 between rule 59 and token '/' resolved as shift.
Conflict in state 143 between rule 59 and token '+=' resolved as shift.
Conflict in state 143 between rule 59 and token '=' resolved as shift.
Conflict in state 143 between rule 59 and token '<=>' resolved as shift.
Conflict in state 144 between rule 85 and token '-' resolved as reduce.
Conflict in state 144 between rule 85 and token 'conforms' resolved as reduce.
Conflict in state 144 between rule 85 and token '*=' resolved as reduce.
Conflict in state 144 between rule 85 and token '<' resolved as reduce.
Conflict in state 144 between rule 85 and token '%' resolved as shift.
Conflict in state 144 between rule 85 and token '==' resolved as reduce.
Conflict in state 144 between rule 85 and token '>=' resolved as reduce.
Conflict in state 144 between rule 85 and token ' ' resolved as shift.
Conflict in state 144 between rule 85 and token '*' resolved as shift.
Conflict in state 144 between rule 85 and token '**=' resolved as reduce.
Conflict in state 144 between rule 85 and token '||' resolved as reduce.
Conflict in state 144 between rule 85 and token '->' resolved as reduce.
Conflict in state 144 between rule 85 and token '-=' resolved as reduce.
Conflict in state 144 between rule 85 and token '/=' resolved as reduce.
Conflict in state 144 between rule 85 and token '<=' resolved as reduce.
Conflict in state 144 between rule 85 and token '%=' resolved as reduce.
Conflict in state 144 between rule 85 and token '>' resolved as reduce.
Conflict in state 144 between rule 85 and token '^=' resolved as reduce.
Conflict in state 144 between rule 85 and token '+' resolved as reduce.
Conflict in state 144 between rule 85 and token '**' resolved as shift.
Conflict in state 144 between rule 85 and token '^' resolved as shift.
Conflict in state 144 between rule 85 and token 'per' resolved as shift.
Conflict in state 144 between rule 85 and token '!=' resolved as reduce.
Conflict in state 144 between rule 85 and token '?' resolved as reduce.
Conflict in state 144 between rule 85 and token '&&' resolved as reduce.
Conflict in state 144 between rule 85 and token '^^' resolved as reduce.
Conflict in state 144 between rule 85 and token '/' resolved as shift.
Conflict in state 144 between rule 85 and token '+=' resolved as reduce.
Conflict in state 144 between rule 85 and token '=' resolved as reduce.
Conflict in state 144 between rule 85 and token '<=>' resolved as reduce.
Conflict in state 145 between rule 83 and token '-' resolved as reduce.
Conflict in state 145 between rule 83 and token 'conforms' resolved as reduce.
Conflict in state 145 between rule 83 and token '*=' resolved as reduce.
Conflict in state 145 between rule 83 and token '<' resolved as reduce.
Conflict in state 145 between rule 83 and token '%' resolved as reduce.
Conflict in state 145 between rule 83 and token '==' resolved as reduce.
Conflict in state 145 between rule 83 and token '>=' resolved as reduce.
Conflict in state 145 between rule 83 and token ' ' resolved as reduce.
Conflict in state 145 between rule 83 and token '*' resolved as reduce.
Conflict in state 145 between rule 83 and token '**=' resolved as reduce.
Conflict in state 145 between rule 83 and token '||' resolved as reduce.
Conflict in state 145 between rule 83 and token '->' resolved as reduce.
Conflict in state 145 between rule 83 and token '-=' resolved as reduce.
Conflict in state 145 between rule 83 and token '/=' resolved as reduce.
Conflict in state 145 between rule 83 and token '<=' resolved as reduce.
Conflict in state 145 between rule 83 and token '%=' resolved as reduce.
Conflict in state 145 between rule 83 and token '>' resolved as reduce.
Conflict in state 145 between rule 83 and token '^=' resolved as reduce.
Conflict in state 145 between rule 83 and token '+' resolved as reduce.
Conflict in state 145 between rule 83 and token '**' resolved as shift.
Conflict in state 145 between rule 83 and token '^' resolved as shift.
Conflict in state 145 between rule 83 and token 'per' resolved as reduce.
Conflict in state 145 between rule 83 and token '!=' resolved as reduce.
Conflict in state 145 between rule 83 and token '?' resolved as reduce.
Conflict in state 145 between rule 83 and token '&&' resolved as reduce.
Conflict in state 145 between rule 83 and token '^^' resolved as reduce.
Conflict in state 145 between rule 83 and token '/' resolved as reduce.
Conflict in state 145 between rule 83 and token '+=' resolved as reduce.
Conflict in state 145 between rule 83 and token '=' resolved as reduce.
Conflict in state 145 between rule 83 and token '<=>' resolved as reduce.
Conflict in state 146 between rule 84 and token '-' resolved as reduce.
Conflict in state 146 between rule 84 and token 'conforms' resolved as reduce.
Conflict in state 146 between rule 84 and token '*=' resolved as reduce.
Conflict in state 146 between rule 84 and token '<' resolved as reduce.
Conflict in state 146 between rule 84 and token '%' resolved as reduce.
Conflict in state 146 between rule 84 and token '==' resolved as reduce.
Conflict in state 146 between rule 84 and token '>=' resolved as reduce.
Conflict in state 146 between rule 84 and token ' ' resolved as reduce.
Conflict in state 146 between rule 84 and token '*' resolved as reduce.
Conflict in state 146 between rule 84 and token '**=' resolved as reduce.
Conflict in state 146 between rule 84 and token '||' resolved as reduce.
Conflict in state 146 between rule 84 and token '->' resolved as reduce.
Conflict in state 146 between rule 84 and token '-=' resolved as reduce.
Conflict in state 146 between rule 84 and token '/=' resolved as reduce.
Conflict in state 146 between rule 84 and token '<=' resolved as reduce.
Conflict in state 146 between rule 84 and token '%=' resolved as reduce.
Conflict in state 146 between rule 84 and token '>' resolved as reduce.
Conflict in state 146 between rule 84 and token '^=' resolved as reduce.
Conflict in state 146 between rule 84 and token '+' resolved as reduce.
Conflict in state 146 between rule 84 and token '**' resolved as shift.
Conflict in state 146 between rule 84 and token '^' resolved as shift.
Conflict in state 146 between rule 84 and token 'per' resolved as reduce.
Conflict in state 146 between rule 84 and token '!=' resolved as reduce.
Conflict in state 146 between rule 84 and token '?' resolved as reduce.
Conflict in state 146 between rule 84 and token '&&' resolved as reduce.
Conflict in state 146 between rule 84 and token '^^' resolved as reduce.
Conflict in state 146 between rule 84 and token '/' resolved as reduce.
Conflict in state 146 between rule 84 and token '+=' resolved as reduce.
Conflict in state 146 between rule 84 and token '=' resolved as reduce.
Conflict in state 146 between rule 84 and token '<=>' resolved as reduce.
Conflict in state 147 between rule 88 and token '-' resolved as reduce.
Conflict in state 147 between rule 88 and token 'conforms' resolved as reduce.
Conflict in state 147 between rule 88 and token '*=' resolved as reduce.
Conflict in state 147 between rule 88 and token '<' resolved as reduce.
Conflict in state 147 between rule 88 and token '%' resolved as shift.
Conflict in state 147 between rule 88 and token '==' resolved as reduce.
Conflict in state 147 between rule 88 and token '>=' resolved as reduce.
Conflict in state 147 between rule 88 and token ' ' resolved as shift.
Conflict in state 147 between rule 88 and token '*' resolved as shift.
Conflict in state 147 between rule 88 and token '**=' resolved as reduce.
Conflict in state 147 between rule 88 and token '||' resolved as reduce.
Conflict in state 147 between rule 88 and token '->' resolved as reduce.
Conflict in state 147 between rule 88 and token '-=' resolved as reduce.
Conflict in state 147 between rule 88 and token '/=' resolved as reduce.
Conflict in state 147 between rule 88 and token '<=' resolved as reduce.
Conflict in state 147 between rule 88 and token '%=' resolved as reduce.
Conflict in state 147 between rule 88 and token '>' resolved as reduce.
Conflict in state 147 between rule 88 and token '^=' resolved as reduce.
Conflict in state 147 between rule 88 and token '+' resolved as reduce.
Conflict in state 147 between rule 88 and token '**' resolved as shift.
Conflict in state 147 between rule 88 and token '^' resolved as shift.
Conflict in state 147 between rule 88 and token 'per' resolved as reduce.
Conflict in state 147 between rule 88 and token '!=' resolved as reduce.
Conflict in state 147 between rule 88 and token '?' resolved as reduce.
Conflict in state 147 between rule 88 and token '&&' resolved as reduce.
Conflict in state 147 between rule 88 and token '^^' resolved as reduce.
Conflict in state 147 between rule 88 and token '/' resolved as shift.
Conflict in state 147 between rule 88 and token '+=' resolved as reduce.
Conflict in state 147 between rule 88 and token '=' resolved as reduce.
Conflict in state 147 between rule 88 and token '<=>' resolved as reduce.
Conflict in state 149 between rule 78 and token '-' resolved as shift.
Conflict in state 149 between rule 78 and token 'conforms' resolved as reduce.
Conflict in state 149 between rule 78 and token '*=' resolved as reduce.
Conflict in state 149 between rule 78 and token '<' resolved as error.
Conflict in state 149 between rule 78 and token '%' resolved as shift.
Conflict in state 149 between rule 78 and token '==' resolved as error.
Conflict in state 149 between rule 78 and token '>=' resolved as error.
Conflict in state 149 between rule 78 and token ' ' resolved as shift.
Conflict in state 149 between rule 78 and token '*' resolved as shift.
Conflict in state 149 between rule 78 and token '**=' resolved as reduce.
Conflict in state 149 between rule 78 and token '||' resolved as reduce.
Conflict in state 149 between rule 78 and token '->' resolved as reduce.
Conflict in state 149 between rule 78 and token '-=' resolved as reduce.
Conflict in state 149 between rule 78 and token '/=' resolved as reduce.
Conflict in state 149 between rule 78 and token '<=' resolved as error.
Conflict in state 149 between rule 78 and token '%=' resolved as reduce.
Conflict in state 149 between rule 78 and token '>' resolved as error.
Conflict in state 149 between rule 78 and token '^=' resolved as reduce.
Conflict in state 149 between rule 78 and token '+' resolved as shift.
Conflict in state 149 between rule 78 and token '**' resolved as shift.
Conflict in state 149 between rule 78 and token '^' resolved as shift.
Conflict in state 149 between rule 78 and token 'per' resolved as shift.
Conflict in state 149 between rule 78 and token '!=' resolved as error.
Conflict in state 149 between rule 78 and token '?' resolved as reduce.
Conflict in state 149 between rule 78 and token '&&' resolved as reduce.
Conflict in state 149 between rule 78 and token '^^' resolved as reduce.
Conflict in state 149 between rule 78 and token '/' resolved as shift.
Conflict in state 149 between rule 78 and token '+=' resolved as reduce.
Conflict in state 149 between rule 78 and token '=' resolved as reduce.
Conflict in state 149 between rule 78 and token '<=>' resolved as error.
Conflict in state 151 between rule 68 and token '-' resolved as shift.
Conflict in state 151 between rule 68 and token 'conforms' resolved as shift.
Conflict in state 151 between rule 68 and token '*=' resolved as reduce.
Conflict in state 151 between rule 68 and token '<' resolved as shift.
Conflict in state 151 between rule 68 and token '%' resolved as shift.
Conflict in state 151 between rule 68 and token '==' resolved as shift.
Conflict in state 151 between rule 68 and token '>=' resolved as shift.
Conflict in state 151 between rule 68 and token ' ' resolved as shift.
Conflict in state 151 between rule 68 and token '*' resolved as shift.
Conflict in state 151 between rule 68 and token '**=' resolved as reduce.
Conflict in state 151 between rule 68 and token '||' resolved as reduce.
Conflict in state 151 between rule 68 and token '->' resolved as reduce.
Conflict in state 151 between rule 68 and token '-=' resolved as reduce.
Conflict in state 151 between rule 68 and token '/=' resolved as reduce.
Conflict in state 151 between rule 68 and token '<=' resolved as shift.
Conflict in state 151 between rule 68 and token '%=' resolved as reduce.
Conflict in state 151 between rule 68 and token '>' resolved as shift.
Conflict in state 151 between rule 68 and token '^=' resolved as reduce.
Conflict in state 151 between rule 68 and token '+' resolved as shift.
Conflict in state 151 between rule 68 and token '**' resolved as shift.
Conflict in state 151 between rule 68 and token '^' resolved as shift.
Conflict in state 151 between rule 68 and token 'per' resolved as shift.
Conflict in state 151 between rule 68 and token '!=' resolved as shift.
Conflict in state 151 between rule 68 and token '?' resolved as reduce.
Conflict in state 151 between rule 68 and token '&&' resolved as reduce.
Conflict in state 151 between rule 68 and token '^^' resolved as reduce.
Conflict in state 151 between rule 68 and token '/' resolved as shift.
Conflict in state 151 between rule 68 and token '+=' resolved as reduce.
Conflict in state 151 between rule 68 and token '=' resolved as reduce.
Conflict in state 151 between rule 68 and token '<=>' resolved as shift.
Conflict in state 152 between rule 70 and token '-' resolved as shift.
Conflict in state 152 between rule 70 and token 'conforms' resolved as shift.
Conflict in state 152 between rule 70 and token '*=' resolved as reduce.
Conflict in state 152 between rule 70 and token '<' resolved as shift.
Conflict in state 152 between rule 70 and token '%' resolved as shift.
Conflict in state 152 between rule 70 and token '==' resolved as shift.
Conflict in state 152 between rule 70 and token '>=' resolved as shift.
Conflict in state 152 between rule 70 and token ' ' resolved as shift.
Conflict in state 152 between rule 70 and token '*' resolved as shift.
Conflict in state 152 between rule 70 and token '**=' resolved as reduce.
Conflict in state 152 between rule 70 and token '||' resolved as reduce.
Conflict in state 152 between rule 70 and token '->' resolved as reduce.
Conflict in state 152 between rule 70 and token '-=' resolved as reduce.
Conflict in state 152 between rule 70 and token '/=' resolved as reduce.
Conflict in state 152 between rule 70 and token '<=' resolved as shift.
Conflict in state 152 between rule 70 and token '%=' resolved as reduce.
Conflict in state 152 between rule 70 and token '>' resolved as shift.
Conflict in state 152 between rule 70 and token '^=' resolved as reduce.
Conflict in state 152 between rule 70 and token '+' resolved as shift.
Conflict in state 152 between rule 70 and token '**' resolved as shift.
Conflict in state 152 between rule 70 and token '^' resolved as shift.
Conflict in state 152 between rule 70 and token 'per' resolved as shift.
Conflict in state 152 between rule 70 and token '!=' resolved as shift.
Conflict in state 152 between rule 70 and token '?' resolved as reduce.
Conflict in state 152 between rule 70 and token '&&' resolved as reduce.
Conflict in state 152 between rule 70 and token '^^' resolved as reduce.
Conflict in state 152 between rule 70 and token '/' resolved as shift.
Conflict in state 152 between rule 70 and token '+=' resolved as reduce.
Conflict in state 152 between rule 70 and token '=' resolved as reduce.
Conflict in state 152 between rule 70 and token '<=>' resolved as shift.
Conflict in state 153 between rule 87 and token '-' resolved as reduce.
Conflict in state 153 between rule 87 and token 'conforms' resolved as reduce.
Conflict in state 153 between rule 87 and token '*=' resolved as reduce.
Conflict in state 153 between rule 87 and token '<' resolved as reduce.
Conflict in state 153 between rule 87 and token '%' resolved as reduce.
Conflict in state 153 between rule 87 and token '==' resolved as reduce.
Conflict in state 153 between rule 87 and token '>=' resolved as reduce.
Conflict in state 153 between rule 87 and token ' ' resolved as reduce.
Conflict in state 153 between rule 87 and token '*' resolved as reduce.
Conflict in state 153 between rule 87 and token '**=' resolved as reduce.
Conflict in state 153 between rule 87 and token '||' resolved as reduce.
Conflict in state 153 between rule 87 and token '->' resolved as reduce.
Conflict in state 153 between rule 87 and token '-=' resolved as reduce.
Conflict in state 153 between rule 87 and token '/=' resolved as reduce.
Conflict in state 153 between rule 87 and token '<=' resolved as reduce.
Conflict in state 153 between rule 87 and token '%=' resolved as reduce.
Conflict in state 153 between rule 87 and token '>' resolved as reduce.
Conflict in state 153 between rule 87 and token '^=' resolved as reduce.
Conflict in state 153 between rule 87 and token '+' resolved as reduce.
Conflict in state 153 between rule 87 and token '**' resolved as shift.
Conflict in state 153 between rule 87 and token '^' resolved as shift.
Conflict in state 153 between rule 87 and token 'per' resolved as reduce.
Conflict in state 153 between rule 87 and token '!=' resolved as reduce.
Conflict in state 153 between rule 87 and token '?' resolved as reduce.
Conflict in state 153 between rule 87 and token '&&' resolved as reduce.
Conflict in state 153 between rule 87 and token '^^' resolved as reduce.
Conflict in state 153 between rule 87 and token '/' resolved as reduce.
Conflict in state 153 between rule 87 and token '+=' resolved as reduce.
Conflict in state 153 between rule 87 and token '=' resolved as reduce.
Conflict in state 153 between rule 87 and token '<=>' resolved as reduce.
Conflict in state 154 between rule 53 and token '-' resolved as shift.
Conflict in state 154 between rule 53 and token 'conforms' resolved as shift.
Conflict in state 154 between rule 53 and token '*=' resolved as shift.
Conflict in state 154 between rule 53 and token '<' resolved as shift.
Conflict in state 154 between rule 53 and token '%' resolved as shift.
Conflict in state 154 between rule 53 and token '==' resolved as shift.
Conflict in state 154 between rule 53 and token '>=' resolved as shift.
Conflict in state 154 between rule 53 and token ' ' resolved as shift.
Conflict in state 154 between rule 53 and token '*' resolved as shift.
Conflict in state 154 between rule 53 and token '**=' resolved as shift.
Conflict in state 154 between rule 53 and token '||' resolved as shift.
Conflict in state 154 between rule 53 and token '->' resolved as shift.
Conflict in state 154 between rule 53 and token '-=' resolved as shift.
Conflict in state 154 between rule 53 and token '/=' resolved as shift.
Conflict in state 154 between rule 53 and token '<=' resolved as shift.
Conflict in state 154 between rule 53 and token '%=' resolved as shift.
Conflict in state 154 between rule 53 and token '>' resolved as shift.
Conflict in state 154 between rule 53 and token '^=' resolved as shift.
Conflict in state 154 between rule 53 and token '+' resolved as shift.
Conflict in state 154 between rule 53 and token '**' resolved as shift.
Conflict in state 154 between rule 53 and token '^' resolved as shift.
Conflict in state 154 between rule 53 and token 'per' resolved as shift.
Conflict in state 154 between rule 53 and token '!=' resolved as shift.
Conflict in state 154 between rule 53 and token '?' resolved as shift.
Conflict in state 154 between rule 53 and token '&&' resolved as shift.
Conflict in state 154 between rule 53 and token '^^' resolved as shift.
Conflict in state 154 between rule 53 and token '/' resolved as shift.
Conflict in state 154 between rule 53 and token '+=' resolved as shift.
Conflict in state 154 between rule 53 and token '=' resolved as shift.
Conflict in state 154 between rule 53 and token '<=>' resolved as shift.
Conflict in state 155 between rule 52 and token '-' resolved as shift.
Conflict in state 155 between rule 52 and token 'conforms' resolved as shift.
Conflict in state 155 between rule 52 and token '*=' resolved as shift.
Conflict in state 155 between rule 52 and token '<' resolved as shift.
Conflict in state 155 between rule 52 and token '%' resolved as shift.
Conflict in state 155 between rule 52 and token '==' resolved as shift.
Conflict in state 155 between rule 52 and token '>=' resolved as shift.
Conflict in state 155 between rule 52 and token ' ' resolved as shift.
Conflict in state 155 between rule 52 and token '*' resolved as shift.
Conflict in state 155 between rule 52 and token '**=' resolved as shift.
Conflict in state 155 between rule 52 and token '||' resolved as shift.
Conflict in state 155 between rule 52 and token '->' resolved as shift.
Conflict in state 155 between rule 52 and token '-=' resolved as shift.
Conflict in state 155 between rule 52 and token '/=' resolved as shift.
Conflict in state 155 between rule 52 and token '<=' resolved as shift.
Conflict in state 155 between rule 52 and token '%=' resolved as shift.
Conflict in state 155 between rule 52 and token '>' resolved as shift.
Conflict in state 155 between rule 52 and token '^=' resolved as shift.
Conflict in state 155 between rule 52 and token '+' resolved as shift.
Conflict in state 155 between rule 52 and token '**' resolved as shift.
Conflict in state 155 between rule 52 and token '^' resolved as shift.
Conflict in state 155 between rule 52 and token 'per' resolved as shift.
Conflict in state 155 between rule 52 and token '!=' resolved as shift.
Conflict in state 155 between rule 52 and token '?' resolved as shift.
Conflict in state 155 between rule 52 and token '&&' resolved as shift.
Conflict in state 155 between rule 52 and token '^^' resolved as shift.
Conflict in state 155 between rule 52 and token '/' resolved as shift.
Conflict in state 155 between rule 52 and token '+=' resolved as shift.
Conflict in state 155 between rule 52 and token '=' resolved as shift.
Conflict in state 155 between rule 52 and token '<=>' resolved as shift.
Conflict in state 156 between rule 77 and token '-' resolved as shift.
Conflict in state 156 between rule 77 and token 'conforms' resolved as reduce.
Conflict in state 156 between rule 77 and token '*=' resolved as reduce.
Conflict in state 156 between rule 77 and token '<' resolved as error.
Conflict in state 156 between rule 77 and token '%' resolved as shift.
Conflict in state 156 between rule 77 and token '==' resolved as error.
Conflict in state 156 between rule 77 and token '>=' resolved as error.
Conflict in state 156 between rule 77 and token ' ' resolved as shift.
Conflict in state 156 between rule 77 and token '*' resolved as shift.
Conflict in state 156 between rule 77 and token '**=' resolved as reduce.
Conflict in state 156 between rule 77 and token '||' resolved as reduce.
Conflict in state 156 between rule 77 and token '->' resolved as reduce.
Conflict in state 156 between rule 77 and token '-=' resolved as reduce.
Conflict in state 156 between rule 77 and token '/=' resolved as reduce.
Conflict in state 156 between rule 77 and token '<=' resolved as error.
Conflict in state 156 between rule 77 and token '%=' resolved as reduce.
Conflict in state 156 between rule 77 and token '>' resolved as error.
Conflict in state 156 between rule 77 and token '^=' resolved as reduce.
Conflict in state 156 between rule 77 and token '+' resolved as shift.
Conflict in state 156 between rule 77 and token '**' resolved as shift.
Conflict in state 156 between rule 77 and token '^' resolved as shift.
Conflict in state 156 between rule 77 and token 'per' resolved as shift.
Conflict in state 156 between rule 77 and token '!=' resolved as error.
Conflict in state 156 between rule 77 and token '?' resolved as reduce.
Conflict in state 156 between rule 77 and token '&&' resolved as reduce.
Conflict in state 156 between rule 77 and token '^^' resolved as reduce.
Conflict in state 156 between rule 77 and token '/' resolved as shift.
Conflict in state 156 between rule 77 and token '+=' resolved as reduce.
Conflict in state 156 between rule 77 and token '=' resolved as reduce.
Conflict in state 156 between rule 77 and token '<=>' resolved as error.
Conflict in state 157 between rule 100 and token '-' resolved as shift.
Conflict in state 157 between rule 100 and token 'conforms' resolved as shift.
Conflict in state 157 between rule 100 and token '*=' resolved as shift.
Conflict in state 157 between rule 100 and token '<' resolved as shift.
Conflict in state 157 between rule 100 and token '%' resolved as shift.
Conflict in state 157 between rule 100 and token '==' resolved as shift.
Conflict in state 157 between rule 100 and token '>=' resolved as shift.
Conflict in state 157 between rule 100 and token ' ' resolved as shift.
Conflict in state 157 between rule 100 and token '*' resolved as shift.
Conflict in state 157 between rule 100 and token '**=' resolved as shift.
Conflict in state 157 between rule 100 and token '||' resolved as shift.
Conflict in state 157 between rule 100 and token '->' resolved as shift.
Conflict in state 157 between rule 100 and token '-=' resolved as shift.
Conflict in state 157 between rule 100 and token '/=' resolved as shift.
Conflict in state 157 between rule 100 and token '<=' resolved as shift.
Conflict in state 157 between rule 100 and token '%=' resolved as shift.
Conflict in state 157 between rule 100 and token '>' resolved as shift.
Conflict in state 157 between rule 100 and token '^=' resolved as shift.
Conflict in state 157 between rule 100 and token '+' resolved as shift.
Conflict in state 157 between rule 100 and token '**' resolved as shift.
Conflict in state 157 between rule 100 and token '^' resolved as shift.
Conflict in state 157 between rule 100 and token 'per' resolved as shift.
Conflict in state 157 between rule 100 and token '!=' resolved as shift.
Conflict in state 157 between rule 100 and token '?' resolved as shift.
Conflict in state 157 between rule 100 and token '&&' resolved as shift.
Conflict in state 157 between rule 100 and token '^^' resolved as shift.
Conflict in state 157 between rule 100 and token '/' resolved as shift.
Conflict in state 157 between rule 100 and token '+=' resolved as shift.
Conflict in state 157 between rule 100 and token '=' resolved as shift.
Conflict in state 157 between rule 100 and token '<=>' resolved as shift.
Conflict in state 161 between rule 101 and token '-' resolved as shift.
Conflict in state 161 between rule 101 and token 'conforms' resolved as shift.
Conflict in state 161 between rule 101 and token '*=' resolved as shift.
Conflict in state 161 between rule 101 and token '<' resolved as shift.
Conflict in state 161 between rule 101 and token '%' resolved as shift.
Conflict in state 161 between rule 101 and token '==' resolved as shift.
Conflict in state 161 between rule 101 and token '>=' resolved as shift.
Conflict in state 161 between rule 101 and token ' ' resolved as shift.
Conflict in state 161 between rule 101 and token '*' resolved as shift.
Conflict in state 161 between rule 101 and token '**=' resolved as shift.
Conflict in state 161 between rule 101 and token '||' resolved as shift.
Conflict in state 161 between rule 101 and token '->' resolved as shift.
Conflict in state 161 between rule 101 and token '-=' resolved as shift.
Conflict in state 161 between rule 101 and token '/=' resolved as shift.
Conflict in state 161 between rule 101 and token '<=' resolved as shift.
Conflict in state 161 between rule 101 and token '%=' resolved as shift.
Conflict in state 161 between rule 101 and token '>' resolved as shift.
Conflict in state 161 between rule 101 and token '^=' resolved as shift.
Conflict in state 161 between rule 101 and token '+' resolved as shift.
Conflict in state 161 between rule 101 and token '**' resolved as shift.
Conflict in state 161 between rule 101 and token '^' resolved as shift.
Conflict in state 161 between rule 101 and token 'per' resolved as shift.
Conflict in state 161 between rule 101 and token '!=' resolved as shift.
Conflict in state 161 between rule 101 and token '?' resolved as shift.
Conflict in state 161 between rule 101 and token '&&' resolved as shift.
Conflict in state 161 between rule 101 and token '^^' resolved as shift.
Conflict in state 161 between rule 101 and token '/' resolved as shift.
Conflict in state 161 between rule 101 and token '+=' resolved as shift.
Conflict in state 161 between rule 101 and token '=' resolved as shift.
Conflict in state 161 between rule 101 and token '<=>' resolved as shift.
Conflict in state 188 between rule 95 and token '-' resolved as shift.
Conflict in state 188 between rule 95 and token 'conforms' resolved as shift.
Conflict in state 188 between rule 95 and token '*=' resolved as reduce.
Conflict in state 188 between rule 95 and token '<' resolved as shift.
Conflict in state 188 between rule 95 and token '%' resolved as shift.
Conflict in state 188 between rule 95 and token '==' resolved as shift.
Conflict in state 188 between rule 95 and token '>=' resolved as shift.
Conflict in state 188 between rule 95 and token ' ' resolved as shift.
Conflict in state 188 between rule 95 and token '*' resolved as shift.
Conflict in state 188 between rule 95 and token '**=' resolved as reduce.
Conflict in state 188 between rule 95 and token '||' resolved as shift.
Conflict in state 188 between rule 95 and token '->' resolved as reduce.
Conflict in state 188 between rule 95 and token '-=' resolved as reduce.
Conflict in state 188 between rule 95 and token '/=' resolved as reduce.
Conflict in state 188 between rule 95 and token '<=' resolved as shift.
Conflict in state 188 between rule 95 and token '%=' resolved as reduce.
Conflict in state 188 between rule 95 and token '>' resolved as shift.
Conflict in state 188 between rule 95 and token '^=' resolved as reduce.
Conflict in state 188 between rule 95 and token '+' resolved as shift.
Conflict in state 188 between rule 95 and token '**' resolved as shift.
Conflict in state 188 between rule 95 and token '^' resolved as shift.
Conflict in state 188 between rule 95 and token 'per' resolved as shift.
Conflict in state 188 between rule 95 and token '!=' resolved as shift.
Conflict in state 188 between rule 95 and token '?' resolved as shift.
Conflict in state 188 between rule 95 and token '&&' resolved as shift.
Conflict in state 188 between rule 95 and token '^^' resolved as shift.
Conflict in state 188 between rule 95 and token '/' resolved as shift.
Conflict in state 188 between rule 95 and token '+=' resolved as reduce.
Conflict in state 188 between rule 95 and token '=' resolved as reduce.
Conflict in state 188 between rule 95 and token '<=>' resolved as shift.

Rules:
------
0:	$start -> stma $end
1:	stma -> /* empty */
2:	stma -> stmt
3:	stma -> stmt ';' stma
4:	stmt -> expr
5:	stmt -> 'var' NAME
6:	stmt -> 'var' NAME '=' expr
7:	stmt -> 'defun' NAME '=' expr
8:	stmt -> NAME ':=' expr
9:	stmt -> expr ':->' expr
10:	stmt -> NAME '=!=' NAME
11:	stmt -> expr '|||' NAME
12:	stmt -> if
13:	stmt -> while
14:	stmt -> NAME '{' arglist '}' ':=' expr
15:	stmt -> NAME '{' arglist '}' ':=' '{' stma '}'
16:	stmt -> module
17:	block -> '{' stma '}'
18:	ifstartcond -> 'if' '(' expr ')'
19:	if -> ifstartcond block
20:	if -> ifstartcond block 'else' block
21:	while -> 'while' '(' expr ')' block
22:	module -> 'module' NAME block
23:	array -> expr ',' array
24:	array -> expr
25:	array -> /* empty */
26:	array -> ',' array
27:	constraint -> expr
28:	constraint -> '...'
29:	argelement -> NAME '=' expr 'isa' constraint
30:	argelement -> NAME 'isa' constraint
31:	argelement -> NAME '=' expr
32:	argelement -> NAME
33:	argelement -> NAME 'byref' 'isa' constraint
34:	argelement -> NAME 'byref'
35:	arglistfilled -> argelement ',' arglistfilled
36:	arglistfilled -> argelement
37:	arglist -> arglistfilled
38:	arglist -> /* empty */
39:	number -> NUMBER
40:	number -> HEXNUMBER
41:	value -> number
42:	value -> DATE
43:	value -> STRING
44:	value -> singleval '@' array '$'
45:	value -> NAME
46:	value -> '[' array ']'
47:	value -> lambda
48:	value -> '&' NAME
49:	parens -> '(' expr ')'
50:	singleval -> value
51:	singleval -> parens
52:	assignexpr -> expr '=' expr
53:	assignexpr2 -> expr '+=' expr
54:	assignexpr2 -> expr '-=' expr
55:	assignexpr2 -> expr '/=' expr
56:	assignexpr2 -> expr '*=' expr
57:	assignexpr2 -> expr '%=' expr
58:	assignexpr2 -> expr '**=' expr
59:	assignexpr2 -> expr '^=' expr
60:	assigncomb -> assignexpr
61:	assigncomb -> assignexpr2
62:	lambda -> '{`' arglist '`' stma '}'
63:	lambda -> '{|' arglist '|' stma '}'
64:	multexpr -> expr '*' expr
65:	multexpr -> singleval singleval
66:	multexpr -> singleval singleval expr
67:	multexpr -> expr ' ' expr
68:	logic -> expr '&&' expr
69:	logic -> expr '||' expr
70:	logic -> expr '^^' expr
71:	logic -> '!' singleval
72:	compare -> expr '<' expr
73:	compare -> expr '>' expr
74:	compare -> expr '<=' expr
75:	compare -> expr '>=' expr
76:	compare -> expr '==' expr
77:	compare -> expr '<=>' expr
78:	compare -> expr '!=' expr
79:	crement -> '++' singleval
80:	crement -> '--' singleval
81:	crement -> singleval '++'
82:	crement -> singleval '--'
83:	powexp -> expr '**' expr
84:	powexp -> expr '^' expr
85:	standardmath -> expr '+' expr
86:	standardmath -> expr '-' expr
87:	standardmath -> expr '/' expr
88:	standardmath -> expr 'per' expr
89:	standardmath -> expr '%' expr
90:	exprnouminus -> singleval
91:	exprnouminus -> multexpr
92:	exprnouminus -> powexp
93:	exprnouminus -> standardmath
94:	exprnouminus -> expr 'conforms' expr
95:	exprnouminus -> expr '?' expr ':' expr
96:	exprnouminus -> singleval '!'
97:	exprnouminus -> logic
98:	exprnouminus -> compare
99:	exprnouminus -> crement
100:	exprnouminus -> NAME '::-' expr
101:	exprnouminus -> NAME ':-' expr
102:	exprnouminus -> expr '->' expr
103:	exprnouminus -> assigncomb
104:	expr -> exprnouminus
105:	expr -> '-' expr

States:
-------
State 0:

	$start -> . stma $end	(Rule 0)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'defun'	shift, and go to state 39
	'if'	shift, and go to state 26
	'module'	shift, and go to state 17
	'var'	shift, and go to state 33
	'while'	shift, and go to state 36
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 31
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 22
	lambda	go to state 24
	number	go to state 23
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 28
	multexpr	go to state 9
	module	go to state 30
	powexp	go to state 32
	stma	go to state 13
	value	go to state 15
	standardmath	go to state 34
	ifstartcond	go to state 16
	stmt	go to state 38
	exprnouminus	go to state 37
	assigncomb	go to state 18
	while	go to state 40
	assignexpr2	go to state 41
	logic	go to state 21

State 1:

	expr -> '-' . expr	(Rule 105)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 42
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 2:

	exprnouminus -> compare .	(Rule 98)

	$default	reduce using rule 98 (exprnouminus)

State 3:

	value -> DATE .	(Rule 42)

	$default	reduce using rule 42 (value)

State 4:

	exprnouminus -> crement .	(Rule 99)

	$default	reduce using rule 99 (exprnouminus)

State 5:

	assigncomb -> assignexpr .	(Rule 60)

	$default	reduce using rule 60 (assigncomb)

State 6:

	stmt -> if .	(Rule 12)

	$default	reduce using rule 12 (stmt)

State 7:

	singleval -> parens .	(Rule 51)

	$default	reduce using rule 51 (singleval)

State 8:

	logic -> '!' . singleval	(Rule 71)

	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 45
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	parens	go to state 7
	singleval	go to state 44
	number	go to state 23
	lambda	go to state 24
	value	go to state 15

State 9:

	exprnouminus -> multexpr .	(Rule 91)

	$default	reduce using rule 91 (exprnouminus)

State 10:

	value -> '[' . array ']'	(Rule 46)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	','	shift, and go to state 46
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 25 (array)

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	assignexpr	go to state 5
	array	go to state 47
	parens	go to state 7
	expr	go to state 48
	multexpr	go to state 9
	powexp	go to state 32
	value	go to state 15
	standardmath	go to state 34
	assigncomb	go to state 18
	exprnouminus	go to state 37
	assignexpr2	go to state 41
	logic	go to state 21

State 11:

	crement -> '--' . singleval	(Rule 80)

	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 45
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	parens	go to state 7
	singleval	go to state 49
	number	go to state 23
	lambda	go to state 24
	value	go to state 15

State 12:

	lambda -> '{`' . arglist '`' stma '}'	(Rule 62)

	NAME	shift, and go to state 52

	$default	reduce using rule 38 (arglist)

	arglist	go to state 53
	argelement	go to state 50
	arglistfilled	go to state 51

State 13:

	$start -> stma . $end	(Rule 0)

	$end	shift, and go to state 54

State 14:

	lambda -> '{|' . arglist '|' stma '}'	(Rule 63)

	NAME	shift, and go to state 52

	$default	reduce using rule 38 (arglist)

	arglist	go to state 55
	argelement	go to state 50
	arglistfilled	go to state 51

State 15:

	singleval -> value .	(Rule 50)

	$default	reduce using rule 50 (singleval)

State 16:

	if -> ifstartcond . block	(Rule 19)
	if -> ifstartcond . block 'else' block	(Rule 20)

	'{'	shift, and go to state 56

	block	go to state 57

State 17:

	module -> 'module' . NAME block	(Rule 22)

	NAME	shift, and go to state 58

State 18:

	exprnouminus -> assigncomb .	(Rule 103)

	$default	reduce using rule 103 (exprnouminus)

State 19:

	parens -> '(' . expr ')'	(Rule 49)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 59
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 20:

	number -> HEXNUMBER .	(Rule 40)

	$default	reduce using rule 40 (number)

State 21:

	exprnouminus -> logic .	(Rule 97)

	$default	reduce using rule 97 (exprnouminus)

State 22:

	value -> singleval . '@' array '$'	(Rule 44)
	multexpr -> singleval . singleval	(Rule 65)
	multexpr -> singleval . singleval expr	(Rule 66)
	crement -> singleval . '++'	(Rule 81)
	crement -> singleval . '--'	(Rule 82)
	exprnouminus -> singleval .	(Rule 90)
	exprnouminus -> singleval . '!'	(Rule 96)

	'!'	shift, and go to state 61
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 64
	'--'	shift, and go to state 62
	'@'	shift, and go to state 60
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 45
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 90 (exprnouminus)

	parens	go to state 7
	singleval	go to state 63
	number	go to state 23
	lambda	go to state 24
	value	go to state 15

State 23:

	value -> number .	(Rule 41)

	$default	reduce using rule 41 (value)

State 24:

	value -> lambda .	(Rule 47)

	$default	reduce using rule 47 (value)

State 25:

	value -> STRING .	(Rule 43)

	$default	reduce using rule 43 (value)

State 26:

	ifstartcond -> 'if' . '(' expr ')'	(Rule 18)

	'('	shift, and go to state 65

State 27:

	crement -> '++' . singleval	(Rule 79)

	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 45
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	parens	go to state 7
	singleval	go to state 66
	number	go to state 23
	lambda	go to state 24
	value	go to state 15

State 28:

	stmt -> expr .	(Rule 4)
	stmt -> expr . ':->' expr	(Rule 9)
	stmt -> expr . '|||' NAME	(Rule 11)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	':->'	shift, and go to state 90
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78
	'|||'	shift, and go to state 77

	$default	reduce using rule 4 (stmt)

State 29:

	number -> NUMBER .	(Rule 39)

	$default	reduce using rule 39 (number)

State 30:

	stmt -> module .	(Rule 16)

	$default	reduce using rule 16 (stmt)

State 31:

	stmt -> NAME . ':=' expr	(Rule 8)
	stmt -> NAME . '=!=' NAME	(Rule 10)
	stmt -> NAME . '{' arglist '}' ':=' expr	(Rule 14)
	stmt -> NAME . '{' arglist '}' ':=' '{' stma '}'	(Rule 15)
	value -> NAME .	(Rule 45)
	exprnouminus -> NAME . '::-' expr	(Rule 100)
	exprnouminus -> NAME . ':-' expr	(Rule 101)

	':-'	shift, and go to state 103
	'::-'	shift, and go to state 99
	':='	shift, and go to state 100
	'=!='	shift, and go to state 102
	'{'	shift, and go to state 101

	$default	reduce using rule 45 (value)

State 32:

	exprnouminus -> powexp .	(Rule 92)

	$default	reduce using rule 92 (exprnouminus)

State 33:

	stmt -> 'var' . NAME	(Rule 5)
	stmt -> 'var' . NAME '=' expr	(Rule 6)

	NAME	shift, and go to state 104

State 34:

	exprnouminus -> standardmath .	(Rule 93)

	$default	reduce using rule 93 (exprnouminus)

State 35:

	value -> '&' . NAME	(Rule 48)

	NAME	shift, and go to state 105

State 36:

	while -> 'while' . '(' expr ')' block	(Rule 21)

	'('	shift, and go to state 106

State 37:

	expr -> exprnouminus .	(Rule 104)

	$default	reduce using rule 104 (expr)

State 38:

	stma -> stmt .	(Rule 2)
	stma -> stmt . ';' stma	(Rule 3)

	';'	shift, and go to state 107

	$default	reduce using rule 2 (stma)

State 39:

	stmt -> 'defun' . NAME '=' expr	(Rule 7)

	NAME	shift, and go to state 108

State 40:

	stmt -> while .	(Rule 13)

	$default	reduce using rule 13 (stmt)

State 41:

	assigncomb -> assignexpr2 .	(Rule 61)

	$default	reduce using rule 61 (assigncomb)

State 42:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)
	expr -> '-' expr .	(Rule 105)

	'**'	shift, and go to state 87
	'^'	shift, and go to state 88

	$default	reduce using rule 105 (expr)

State 43:

	value -> NAME .	(Rule 45)
	exprnouminus -> NAME . '::-' expr	(Rule 100)
	exprnouminus -> NAME . ':-' expr	(Rule 101)

	':-'	shift, and go to state 103
	'::-'	shift, and go to state 99

	$default	reduce using rule 45 (value)

State 44:

	value -> singleval . '@' array '$'	(Rule 44)
	logic -> '!' singleval .	(Rule 71)

	'@'	shift, and go to state 60

	$default	reduce using rule 71 (logic)

State 45:

	value -> NAME .	(Rule 45)

	$default	reduce using rule 45 (value)

State 46:

	array -> ',' . array	(Rule 26)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	','	shift, and go to state 46
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 25 (array)

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	assignexpr	go to state 5
	array	go to state 109
	parens	go to state 7
	expr	go to state 48
	multexpr	go to state 9
	powexp	go to state 32
	value	go to state 15
	standardmath	go to state 34
	assigncomb	go to state 18
	exprnouminus	go to state 37
	assignexpr2	go to state 41
	logic	go to state 21

State 47:

	value -> '[' array . ']'	(Rule 46)

	']'	shift, and go to state 110

State 48:

	array -> expr . ',' array	(Rule 23)
	array -> expr .	(Rule 24)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	','	shift, and go to state 111
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 24 (array)

State 49:

	value -> singleval . '@' array '$'	(Rule 44)
	crement -> '--' singleval .	(Rule 80)

	'@'	shift, and go to state 60

	$default	reduce using rule 80 (crement)

State 50:

	arglistfilled -> argelement . ',' arglistfilled	(Rule 35)
	arglistfilled -> argelement .	(Rule 36)

	','	shift, and go to state 112

	$default	reduce using rule 36 (arglistfilled)

State 51:

	arglist -> arglistfilled .	(Rule 37)

	$default	reduce using rule 37 (arglist)

State 52:

	argelement -> NAME . '=' expr 'isa' constraint	(Rule 29)
	argelement -> NAME . 'isa' constraint	(Rule 30)
	argelement -> NAME . '=' expr	(Rule 31)
	argelement -> NAME .	(Rule 32)
	argelement -> NAME . 'byref' 'isa' constraint	(Rule 33)
	argelement -> NAME . 'byref'	(Rule 34)

	'='	shift, and go to state 115
	'byref'	shift, and go to state 113
	'isa'	shift, and go to state 114

	$default	reduce using rule 32 (argelement)

State 53:

	lambda -> '{`' arglist . '`' stma '}'	(Rule 62)

	'`'	shift, and go to state 116

State 54:

	$start -> stma $end .	(Rule 0)

	$default	accept

State 55:

	lambda -> '{|' arglist . '|' stma '}'	(Rule 63)

	'|'	shift, and go to state 117

State 56:

	block -> '{' . stma '}'	(Rule 17)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'defun'	shift, and go to state 39
	'if'	shift, and go to state 26
	'module'	shift, and go to state 17
	'var'	shift, and go to state 33
	'while'	shift, and go to state 36
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 31
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 28
	multexpr	go to state 9
	module	go to state 30
	powexp	go to state 32
	stma	go to state 118
	value	go to state 15
	standardmath	go to state 34
	ifstartcond	go to state 16
	stmt	go to state 38
	exprnouminus	go to state 37
	assigncomb	go to state 18
	while	go to state 40
	assignexpr2	go to state 41
	logic	go to state 21

State 57:

	if -> ifstartcond block .	(Rule 19)
	if -> ifstartcond block . 'else' block	(Rule 20)

	'else'	shift, and go to state 119

	$default	reduce using rule 19 (if)

State 58:

	module -> 'module' NAME . block	(Rule 22)

	'{'	shift, and go to state 56

	block	go to state 120

State 59:

	parens -> '(' expr . ')'	(Rule 49)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	')'	shift, and go to state 121
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

State 60:

	value -> singleval '@' . array '$'	(Rule 44)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	','	shift, and go to state 46
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 25 (array)

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	assignexpr	go to state 5
	array	go to state 122
	parens	go to state 7
	expr	go to state 48
	multexpr	go to state 9
	powexp	go to state 32
	value	go to state 15
	standardmath	go to state 34
	assigncomb	go to state 18
	exprnouminus	go to state 37
	assignexpr2	go to state 41
	logic	go to state 21

State 61:

	exprnouminus -> singleval '!' .	(Rule 96)

	$default	reduce using rule 96 (exprnouminus)

State 62:

	crement -> singleval '--' .	(Rule 82)

	$default	reduce using rule 82 (crement)

State 63:

	value -> singleval . '@' array '$'	(Rule 44)
	multexpr -> singleval singleval .	(Rule 65)
	multexpr -> singleval singleval . expr	(Rule 66)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'--'	shift, and go to state 11
	'@'	shift, and go to state 60
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 65 (multexpr)

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 123
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 64:

	crement -> singleval '++' .	(Rule 81)

	$default	reduce using rule 81 (crement)

State 65:

	ifstartcond -> 'if' '(' . expr ')'	(Rule 18)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 124
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 66:

	value -> singleval . '@' array '$'	(Rule 44)
	crement -> '++' singleval .	(Rule 79)

	'@'	shift, and go to state 60

	$default	reduce using rule 79 (crement)

State 67:

	standardmath -> expr '-' . expr	(Rule 86)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 125
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 68:

	exprnouminus -> expr 'conforms' . expr	(Rule 94)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 126
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 69:

	compare -> expr '<' . expr	(Rule 72)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 127
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 70:

	assignexpr2 -> expr '*=' . expr	(Rule 56)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 128
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 71:

	standardmath -> expr '%' . expr	(Rule 89)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 129
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 72:

	compare -> expr '==' . expr	(Rule 76)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 130
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 73:

	compare -> expr '>=' . expr	(Rule 75)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 131
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 74:

	multexpr -> expr ' ' . expr	(Rule 67)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 132
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 75:

	multexpr -> expr '*' . expr	(Rule 64)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 133
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 76:

	assignexpr2 -> expr '**=' . expr	(Rule 58)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 134
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 77:

	stmt -> expr '|||' . NAME	(Rule 11)

	NAME	shift, and go to state 135

State 78:

	logic -> expr '||' . expr	(Rule 69)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 136
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 79:

	exprnouminus -> expr '->' . expr	(Rule 102)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 137
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 80:

	assignexpr2 -> expr '-=' . expr	(Rule 54)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 138
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 81:

	assignexpr2 -> expr '/=' . expr	(Rule 55)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 139
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 82:

	compare -> expr '<=' . expr	(Rule 74)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 140
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 83:

	compare -> expr '>' . expr	(Rule 73)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 141
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 84:

	assignexpr2 -> expr '%=' . expr	(Rule 57)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 142
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 85:

	assignexpr2 -> expr '^=' . expr	(Rule 59)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 143
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 86:

	standardmath -> expr '+' . expr	(Rule 85)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 144
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 87:

	powexp -> expr '**' . expr	(Rule 83)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 145
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 88:

	powexp -> expr '^' . expr	(Rule 84)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 146
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 89:

	standardmath -> expr 'per' . expr	(Rule 88)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 147
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 90:

	stmt -> expr ':->' . expr	(Rule 9)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 148
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 91:

	compare -> expr '!=' . expr	(Rule 78)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 149
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 92:

	exprnouminus -> expr '?' . expr ':' expr	(Rule 95)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 150
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 93:

	logic -> expr '&&' . expr	(Rule 68)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 151
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 94:

	logic -> expr '^^' . expr	(Rule 70)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 152
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 95:

	standardmath -> expr '/' . expr	(Rule 87)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 153
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 96:

	assignexpr2 -> expr '+=' . expr	(Rule 53)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 154
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 97:

	assignexpr -> expr '=' . expr	(Rule 52)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 155
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 98:

	compare -> expr '<=>' . expr	(Rule 77)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 156
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 99:

	exprnouminus -> NAME '::-' . expr	(Rule 100)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 157
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 100:

	stmt -> NAME ':=' . expr	(Rule 8)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 158
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 101:

	stmt -> NAME '{' . arglist '}' ':=' expr	(Rule 14)
	stmt -> NAME '{' . arglist '}' ':=' '{' stma '}'	(Rule 15)

	NAME	shift, and go to state 52

	$default	reduce using rule 38 (arglist)

	arglist	go to state 159
	argelement	go to state 50
	arglistfilled	go to state 51

State 102:

	stmt -> NAME '=!=' . NAME	(Rule 10)

	NAME	shift, and go to state 160

State 103:

	exprnouminus -> NAME ':-' . expr	(Rule 101)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 161
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 104:

	stmt -> 'var' NAME .	(Rule 5)
	stmt -> 'var' NAME . '=' expr	(Rule 6)

	'='	shift, and go to state 162

	$default	reduce using rule 5 (stmt)

State 105:

	value -> '&' NAME .	(Rule 48)

	$default	reduce using rule 48 (value)

State 106:

	while -> 'while' '(' . expr ')' block	(Rule 21)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 163
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 107:

	stma -> stmt ';' . stma	(Rule 3)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'defun'	shift, and go to state 39
	'if'	shift, and go to state 26
	'module'	shift, and go to state 17
	'var'	shift, and go to state 33
	'while'	shift, and go to state 36
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 31
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 28
	multexpr	go to state 9
	module	go to state 30
	powexp	go to state 32
	stma	go to state 164
	value	go to state 15
	standardmath	go to state 34
	ifstartcond	go to state 16
	stmt	go to state 38
	exprnouminus	go to state 37
	assigncomb	go to state 18
	while	go to state 40
	assignexpr2	go to state 41
	logic	go to state 21

State 108:

	stmt -> 'defun' NAME . '=' expr	(Rule 7)

	'='	shift, and go to state 165

State 109:

	array -> ',' array .	(Rule 26)

	$default	reduce using rule 26 (array)

State 110:

	value -> '[' array ']' .	(Rule 46)

	$default	reduce using rule 46 (value)

State 111:

	array -> expr ',' . array	(Rule 23)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	','	shift, and go to state 46
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 25 (array)

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	assignexpr	go to state 5
	array	go to state 166
	parens	go to state 7
	expr	go to state 48
	multexpr	go to state 9
	powexp	go to state 32
	value	go to state 15
	standardmath	go to state 34
	assigncomb	go to state 18
	exprnouminus	go to state 37
	assignexpr2	go to state 41
	logic	go to state 21

State 112:

	arglistfilled -> argelement ',' . arglistfilled	(Rule 35)

	NAME	shift, and go to state 52

	argelement	go to state 50
	arglistfilled	go to state 167

State 113:

	argelement -> NAME 'byref' . 'isa' constraint	(Rule 33)
	argelement -> NAME 'byref' .	(Rule 34)

	'isa'	shift, and go to state 168

	$default	reduce using rule 34 (argelement)

State 114:

	argelement -> NAME 'isa' . constraint	(Rule 30)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'...'	shift, and go to state 171
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 170
	multexpr	go to state 9
	constraint	go to state 169
	powexp	go to state 32
	value	go to state 15
	standardmath	go to state 34
	assigncomb	go to state 18
	exprnouminus	go to state 37
	assignexpr2	go to state 41
	logic	go to state 21

State 115:

	argelement -> NAME '=' . expr 'isa' constraint	(Rule 29)
	argelement -> NAME '=' . expr	(Rule 31)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 172
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 116:

	lambda -> '{`' arglist '`' . stma '}'	(Rule 62)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'defun'	shift, and go to state 39
	'if'	shift, and go to state 26
	'module'	shift, and go to state 17
	'var'	shift, and go to state 33
	'while'	shift, and go to state 36
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 31
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 28
	multexpr	go to state 9
	module	go to state 30
	powexp	go to state 32
	stma	go to state 173
	value	go to state 15
	standardmath	go to state 34
	ifstartcond	go to state 16
	stmt	go to state 38
	exprnouminus	go to state 37
	assigncomb	go to state 18
	while	go to state 40
	assignexpr2	go to state 41
	logic	go to state 21

State 117:

	lambda -> '{|' arglist '|' . stma '}'	(Rule 63)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'defun'	shift, and go to state 39
	'if'	shift, and go to state 26
	'module'	shift, and go to state 17
	'var'	shift, and go to state 33
	'while'	shift, and go to state 36
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 31
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 28
	multexpr	go to state 9
	module	go to state 30
	powexp	go to state 32
	stma	go to state 174
	value	go to state 15
	standardmath	go to state 34
	ifstartcond	go to state 16
	stmt	go to state 38
	exprnouminus	go to state 37
	assigncomb	go to state 18
	while	go to state 40
	assignexpr2	go to state 41
	logic	go to state 21

State 118:

	block -> '{' stma . '}'	(Rule 17)

	'}'	shift, and go to state 175

State 119:

	if -> ifstartcond block 'else' . block	(Rule 20)

	'{'	shift, and go to state 56

	block	go to state 176

State 120:

	module -> 'module' NAME block .	(Rule 22)

	$default	reduce using rule 22 (module)

State 121:

	parens -> '(' expr ')' .	(Rule 49)

	$default	reduce using rule 49 (parens)

State 122:

	value -> singleval '@' array . '$'	(Rule 44)

	'$'	shift, and go to state 177

State 123:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> singleval singleval expr .	(Rule 66)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	'**'	shift, and go to state 87
	'^'	shift, and go to state 88

	$default	reduce using rule 66 (multexpr)

State 124:

	ifstartcond -> 'if' '(' expr . ')'	(Rule 18)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	')'	shift, and go to state 178
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

State 125:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr '-' expr .	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'/'	shift, and go to state 95
	'^'	shift, and go to state 88
	'per'	shift, and go to state 89

	$default	reduce using rule 86 (standardmath)

State 126:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr 'conforms' expr .	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'^'	shift, and go to state 88
	'per'	shift, and go to state 89

	$default	reduce using rule 94 (exprnouminus)

State 127:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr '<' expr .	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'^'	shift, and go to state 88
	'per'	shift, and go to state 89

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 72 (compare)

State 128:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr '*=' expr .	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 56 (assignexpr2)

State 129:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	standardmath -> expr '%' expr .	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	'**'	shift, and go to state 87
	'^'	shift, and go to state 88

	$default	reduce using rule 89 (standardmath)

State 130:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr '==' expr .	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'^'	shift, and go to state 88
	'per'	shift, and go to state 89

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 76 (compare)

State 131:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr '>=' expr .	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'^'	shift, and go to state 88
	'per'	shift, and go to state 89

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 75 (compare)

State 132:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	multexpr -> expr ' ' expr .	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	'**'	shift, and go to state 87
	'^'	shift, and go to state 88

	$default	reduce using rule 67 (multexpr)

State 133:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr '*' expr .	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	'**'	shift, and go to state 87
	'^'	shift, and go to state 88

	$default	reduce using rule 64 (multexpr)

State 134:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr '**=' expr .	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 58 (assignexpr2)

State 135:

	stmt -> expr '|||' NAME .	(Rule 11)

	$default	reduce using rule 11 (stmt)

State 136:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr '||' expr .	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'^'	shift, and go to state 88
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89

	$default	reduce using rule 69 (logic)

State 137:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)
	exprnouminus -> expr '->' expr .	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 102 (exprnouminus)

State 138:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr '-=' expr .	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 54 (assignexpr2)

State 139:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr '/=' expr .	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 55 (assignexpr2)

State 140:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr '<=' expr .	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'^'	shift, and go to state 88
	'per'	shift, and go to state 89

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 74 (compare)

State 141:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr '>' expr .	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'^'	shift, and go to state 88
	'per'	shift, and go to state 89

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 73 (compare)

State 142:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr '%=' expr .	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 57 (assignexpr2)

State 143:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	assignexpr2 -> expr '^=' expr .	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 59 (assignexpr2)

State 144:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr '+' expr .	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'/'	shift, and go to state 95
	'^'	shift, and go to state 88
	'per'	shift, and go to state 89

	$default	reduce using rule 85 (standardmath)

State 145:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr '**' expr .	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	'**'	shift, and go to state 87
	'^'	shift, and go to state 88

	$default	reduce using rule 83 (powexp)

State 146:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	powexp -> expr '^' expr .	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	'**'	shift, and go to state 87
	'^'	shift, and go to state 88

	$default	reduce using rule 84 (powexp)

State 147:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr 'per' expr .	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'/'	shift, and go to state 95
	'^'	shift, and go to state 88

	$default	reduce using rule 88 (standardmath)

State 148:

	stmt -> expr ':->' expr .	(Rule 9)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 9 (stmt)

State 149:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	compare -> expr '!=' expr .	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'^'	shift, and go to state 88
	'per'	shift, and go to state 89

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 78 (compare)

State 150:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr '?' expr . ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	':'	shift, and go to state 179
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

State 151:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr '&&' expr .	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'^'	shift, and go to state 88
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89

	$default	reduce using rule 68 (logic)

State 152:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	logic -> expr '^^' expr .	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'^'	shift, and go to state 88
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89

	$default	reduce using rule 70 (logic)

State 153:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr '/' expr .	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	'**'	shift, and go to state 87
	'^'	shift, and go to state 88

	$default	reduce using rule 87 (standardmath)

State 154:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr '+=' expr .	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 53 (assignexpr2)

State 155:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr -> expr '=' expr .	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 52 (assignexpr)

State 156:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr '<=>' expr .	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'%'	shift, and go to state 71
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'^'	shift, and go to state 88
	'per'	shift, and go to state 89

	'!='	error (nonassociative)
	'<'	error (nonassociative)
	'<='	error (nonassociative)
	'<=>'	error (nonassociative)
	'=='	error (nonassociative)
	'>'	error (nonassociative)
	'>='	error (nonassociative)

	$default	reduce using rule 77 (compare)

State 157:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> NAME '::-' expr .	(Rule 100)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 100 (exprnouminus)

State 158:

	stmt -> NAME ':=' expr .	(Rule 8)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 8 (stmt)

State 159:

	stmt -> NAME '{' arglist . '}' ':=' expr	(Rule 14)
	stmt -> NAME '{' arglist . '}' ':=' '{' stma '}'	(Rule 15)

	'}'	shift, and go to state 180

State 160:

	stmt -> NAME '=!=' NAME .	(Rule 10)

	$default	reduce using rule 10 (stmt)

State 161:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> NAME ':-' expr .	(Rule 101)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 101 (exprnouminus)

State 162:

	stmt -> 'var' NAME '=' . expr	(Rule 6)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 181
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 163:

	while -> 'while' '(' expr . ')' block	(Rule 21)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	')'	shift, and go to state 182
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

State 164:

	stma -> stmt ';' stma .	(Rule 3)

	$default	reduce using rule 3 (stma)

State 165:

	stmt -> 'defun' NAME '=' . expr	(Rule 7)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 183
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 166:

	array -> expr ',' array .	(Rule 23)

	$default	reduce using rule 23 (array)

State 167:

	arglistfilled -> argelement ',' arglistfilled .	(Rule 35)

	$default	reduce using rule 35 (arglistfilled)

State 168:

	argelement -> NAME 'byref' 'isa' . constraint	(Rule 33)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'...'	shift, and go to state 171
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 170
	multexpr	go to state 9
	constraint	go to state 184
	powexp	go to state 32
	value	go to state 15
	standardmath	go to state 34
	assigncomb	go to state 18
	exprnouminus	go to state 37
	assignexpr2	go to state 41
	logic	go to state 21

State 169:

	argelement -> NAME 'isa' constraint .	(Rule 30)

	$default	reduce using rule 30 (argelement)

State 170:

	constraint -> expr .	(Rule 27)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 27 (constraint)

State 171:

	constraint -> '...' .	(Rule 28)

	$default	reduce using rule 28 (constraint)

State 172:

	argelement -> NAME '=' expr . 'isa' constraint	(Rule 29)
	argelement -> NAME '=' expr .	(Rule 31)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'isa'	shift, and go to state 185
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 31 (argelement)

State 173:

	lambda -> '{`' arglist '`' stma . '}'	(Rule 62)

	'}'	shift, and go to state 186

State 174:

	lambda -> '{|' arglist '|' stma . '}'	(Rule 63)

	'}'	shift, and go to state 187

State 175:

	block -> '{' stma '}' .	(Rule 17)

	$default	reduce using rule 17 (block)

State 176:

	if -> ifstartcond block 'else' block .	(Rule 20)

	$default	reduce using rule 20 (if)

State 177:

	value -> singleval '@' array '$' .	(Rule 44)

	$default	reduce using rule 44 (value)

State 178:

	ifstartcond -> 'if' '(' expr ')' .	(Rule 18)

	$default	reduce using rule 18 (ifstartcond)

State 179:

	exprnouminus -> expr '?' expr ':' . expr	(Rule 95)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 188
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 180:

	stmt -> NAME '{' arglist '}' . ':=' expr	(Rule 14)
	stmt -> NAME '{' arglist '}' . ':=' '{' stma '}'	(Rule 15)

	':='	shift, and go to state 189

State 181:

	stmt -> 'var' NAME '=' expr .	(Rule 6)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 6 (stmt)

State 182:

	while -> 'while' '(' expr ')' . block	(Rule 21)

	'{'	shift, and go to state 56

	block	go to state 190

State 183:

	stmt -> 'defun' NAME '=' expr .	(Rule 7)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 7 (stmt)

State 184:

	argelement -> NAME 'byref' 'isa' constraint .	(Rule 33)

	$default	reduce using rule 33 (argelement)

State 185:

	argelement -> NAME '=' expr 'isa' . constraint	(Rule 29)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'...'	shift, and go to state 171
	'['	shift, and go to state 10
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 170
	multexpr	go to state 9
	constraint	go to state 191
	powexp	go to state 32
	value	go to state 15
	standardmath	go to state 34
	assigncomb	go to state 18
	exprnouminus	go to state 37
	assignexpr2	go to state 41
	logic	go to state 21

State 186:

	lambda -> '{`' arglist '`' stma '}' .	(Rule 62)

	$default	reduce using rule 62 (lambda)

State 187:

	lambda -> '{|' arglist '|' stma '}' .	(Rule 63)

	$default	reduce using rule 63 (lambda)

State 188:

	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr '?' expr ':' expr .	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'+'	shift, and go to state 86
	'-'	shift, and go to state 67
	'/'	shift, and go to state 95
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 95 (exprnouminus)

State 189:

	stmt -> NAME '{' arglist '}' ':=' . expr	(Rule 14)
	stmt -> NAME '{' arglist '}' ':=' . '{' stma '}'	(Rule 15)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'{'	shift, and go to state 193
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 43
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	compare	go to state 2
	singleval	go to state 22
	powexp	go to state 32
	number	go to state 23
	lambda	go to state 24
	value	go to state 15
	standardmath	go to state 34
	crement	go to state 4
	assignexpr	go to state 5
	exprnouminus	go to state 37
	parens	go to state 7
	assigncomb	go to state 18
	expr	go to state 192
	assignexpr2	go to state 41
	multexpr	go to state 9
	logic	go to state 21

State 190:

	while -> 'while' '(' expr ')' block .	(Rule 21)

	$default	reduce using rule 21 (while)

State 191:

	argelement -> NAME '=' expr 'isa' constraint .	(Rule 29)

	$default	reduce using rule 29 (argelement)

State 192:

	stmt -> NAME '{' arglist '}' ':=' expr .	(Rule 14)
	assignexpr -> expr . '=' expr	(Rule 52)
	assignexpr2 -> expr . '+=' expr	(Rule 53)
	assignexpr2 -> expr . '-=' expr	(Rule 54)
	assignexpr2 -> expr . '/=' expr	(Rule 55)
	assignexpr2 -> expr . '*=' expr	(Rule 56)
	assignexpr2 -> expr . '%=' expr	(Rule 57)
	assignexpr2 -> expr . '**=' expr	(Rule 58)
	assignexpr2 -> expr . '^=' expr	(Rule 59)
	multexpr -> expr . '*' expr	(Rule 64)
	multexpr -> expr . ' ' expr	(Rule 67)
	logic -> expr . '&&' expr	(Rule 68)
	logic -> expr . '||' expr	(Rule 69)
	logic -> expr . '^^' expr	(Rule 70)
	compare -> expr . '<' expr	(Rule 72)
	compare -> expr . '>' expr	(Rule 73)
	compare -> expr . '<=' expr	(Rule 74)
	compare -> expr . '>=' expr	(Rule 75)
	compare -> expr . '==' expr	(Rule 76)
	compare -> expr . '<=>' expr	(Rule 77)
	compare -> expr . '!=' expr	(Rule 78)
	powexp -> expr . '**' expr	(Rule 83)
	powexp -> expr . '^' expr	(Rule 84)
	standardmath -> expr . '+' expr	(Rule 85)
	standardmath -> expr . '-' expr	(Rule 86)
	standardmath -> expr . '/' expr	(Rule 87)
	standardmath -> expr . 'per' expr	(Rule 88)
	standardmath -> expr . '%' expr	(Rule 89)
	exprnouminus -> expr . 'conforms' expr	(Rule 94)
	exprnouminus -> expr . '?' expr ':' expr	(Rule 95)
	exprnouminus -> expr . '->' expr	(Rule 102)

	' '	shift, and go to state 74
	'!='	shift, and go to state 91
	'%'	shift, and go to state 71
	'%='	shift, and go to state 84
	'&&'	shift, and go to state 93
	'*'	shift, and go to state 75
	'**'	shift, and go to state 87
	'**='	shift, and go to state 76
	'*='	shift, and go to state 70
	'+'	shift, and go to state 86
	'+='	shift, and go to state 96
	'-'	shift, and go to state 67
	'-='	shift, and go to state 80
	'->'	shift, and go to state 79
	'/'	shift, and go to state 95
	'/='	shift, and go to state 81
	'<'	shift, and go to state 69
	'<='	shift, and go to state 82
	'<=>'	shift, and go to state 98
	'='	shift, and go to state 97
	'=='	shift, and go to state 72
	'>'	shift, and go to state 83
	'>='	shift, and go to state 73
	'?'	shift, and go to state 92
	'^'	shift, and go to state 88
	'^='	shift, and go to state 85
	'^^'	shift, and go to state 94
	'conforms'	shift, and go to state 68
	'per'	shift, and go to state 89
	'||'	shift, and go to state 78

	$default	reduce using rule 14 (stmt)

State 193:

	stmt -> NAME '{' arglist '}' ':=' '{' . stma '}'	(Rule 15)

	'!'	shift, and go to state 8
	'&'	shift, and go to state 35
	'('	shift, and go to state 19
	'++'	shift, and go to state 27
	'-'	shift, and go to state 1
	'--'	shift, and go to state 11
	'['	shift, and go to state 10
	'defun'	shift, and go to state 39
	'if'	shift, and go to state 26
	'module'	shift, and go to state 17
	'var'	shift, and go to state 33
	'while'	shift, and go to state 36
	'{`'	shift, and go to state 12
	'{|'	shift, and go to state 14
	DATE	shift, and go to state 3
	HEXNUMBER	shift, and go to state 20
	NAME	shift, and go to state 31
	NUMBER	shift, and go to state 29
	STRING	shift, and go to state 25

	$default	reduce using rule 1 (stma)

	compare	go to state 2
	singleval	go to state 22
	number	go to state 23
	lambda	go to state 24
	crement	go to state 4
	if	go to state 6
	assignexpr	go to state 5
	parens	go to state 7
	expr	go to state 28
	multexpr	go to state 9
	module	go to state 30
	powexp	go to state 32
	stma	go to state 194
	value	go to state 15
	standardmath	go to state 34
	ifstartcond	go to state 16
	stmt	go to state 38
	exprnouminus	go to state 37
	assigncomb	go to state 18
	while	go to state 40
	assignexpr2	go to state 41
	logic	go to state 21

State 194:

	stmt -> NAME '{' arglist '}' ':=' '{' stma . '}'	(Rule 15)

	'}'	shift, and go to state 195

State 195:

	stmt -> NAME '{' arglist '}' ':=' '{' stma '}' .	(Rule 15)

	$default	reduce using rule 15 (stmt)


Summary:
--------
Number of rules         : 106
Number of terminals     : 73
Number of non-terminals : 29
Number of states        : 196
